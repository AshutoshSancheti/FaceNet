name: "global_step/initial_value"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
name: "global_step"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "global_step/Assign"
op: "Assign"
input: "global_step"
input: "global_step/initial_value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@global_step"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "global_step/read"
op: "Identity"
input: "global_step"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@global_step"
    }
  }
}
name: "x_input"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
      dim {
        size: 224
      }
      dim {
        size: 224
      }
      dim {
        size: 3
      }
    }
  }
}
name: "MobilenetV2/input"
op: "Identity"
input: "x_input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Conv/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/Conv/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/Conv/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/Conv/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/Conv/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/Conv/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/Conv/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
name: "MobilenetV2/Conv/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/Conv/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/Conv/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
name: "MobilenetV2/Conv/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv/weights/Assign"
op: "Assign"
input: "MobilenetV2/Conv/weights"
input: "MobilenetV2/Conv/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/weights/read"
op: "Identity"
input: "MobilenetV2/Conv/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
name: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/Conv/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
name: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
name: "MobilenetV2/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/Conv/Conv2D"
op: "Conv2D"
input: "MobilenetV2/input"
input: "MobilenetV2/Conv/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/gamma"
input: "MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/Conv/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/beta"
input: "MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/Conv/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/moving_mean"
input: "MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/Conv/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/moving_variance"
input: "MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/Conv/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/Conv/Conv2D"
input: "MobilenetV2/Conv/BatchNorm/gamma/read"
input: "MobilenetV2/Conv/BatchNorm/beta/read"
input: "MobilenetV2/Conv/BatchNorm/Const"
input: "MobilenetV2/Conv/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/Conv/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/Conv/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/Conv/BatchNorm/moving_mean"
input: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/Conv/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/Conv/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/Conv/BatchNorm/moving_variance"
input: "MobilenetV2/Conv/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/Conv/Relu6"
op: "Relu6"
input: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv/input"
op: "Identity"
input: "MobilenetV2/Conv/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv/input"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv/depthwise/depthwise"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 16
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/weights"
input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv/depthwise_output"
input: "MobilenetV2/expanded_conv/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 16
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 16
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 16
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 16
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv/project/Conv2D"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv/output"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_1/input"
op: "Identity"
input: "MobilenetV2/expanded_conv/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 16
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/weights"
input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_1/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_1/input"
input: "MobilenetV2/expanded_conv_1/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_1/expand/Conv2D"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_1/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_1/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 96
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_1/expansion_output"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/weights"
input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_1/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_1/depthwise_output"
input: "MobilenetV2/expanded_conv_1/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_1/project/Conv2D"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_1/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_1/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_2/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 24
      }
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/weights"
input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_2/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_2/input"
input: "MobilenetV2/expanded_conv_2/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_2/expand/Conv2D"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_2/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_2/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_2/expansion_output"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 144
      }
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/weights"
input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_2/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_2/depthwise_output"
input: "MobilenetV2/expanded_conv_2/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_2/project/Conv2D"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_2/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_2/add"
op: "Add"
input: "MobilenetV2/expanded_conv_2/project/Identity"
input: "MobilenetV2/expanded_conv_2/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_2/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_3/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 24
      }
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/weights"
input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_3/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_3/input"
input: "MobilenetV2/expanded_conv_3/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_3/expand/Conv2D"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_3/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_3/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_3/expansion_output"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 144
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/weights"
input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_3/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_3/depthwise_output"
input: "MobilenetV2/expanded_conv_3/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_3/project/Conv2D"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_3/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_3/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_4/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/weights"
input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_4/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_4/input"
input: "MobilenetV2/expanded_conv_4/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_4/expand/Conv2D"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_4/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_4/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_4/expansion_output"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/weights"
input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_4/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_4/depthwise_output"
input: "MobilenetV2/expanded_conv_4/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_4/project/Conv2D"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_4/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_4/add"
op: "Add"
input: "MobilenetV2/expanded_conv_4/project/Identity"
input: "MobilenetV2/expanded_conv_4/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_4/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_5/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/weights"
input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_5/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_5/input"
input: "MobilenetV2/expanded_conv_5/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_5/expand/Conv2D"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_5/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_5/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_5/expansion_output"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/weights"
input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_5/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_5/depthwise_output"
input: "MobilenetV2/expanded_conv_5/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_5/project/Conv2D"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_5/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_5/add"
op: "Add"
input: "MobilenetV2/expanded_conv_5/project/Identity"
input: "MobilenetV2/expanded_conv_5/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_5/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_6/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/weights"
input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_6/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_6/input"
input: "MobilenetV2/expanded_conv_6/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_6/expand/Conv2D"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_6/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_6/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_6/expansion_output"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/weights"
input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_6/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_6/depthwise_output"
input: "MobilenetV2/expanded_conv_6/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_6/project/Conv2D"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_6/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_6/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_7/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/weights"
input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_7/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_7/input"
input: "MobilenetV2/expanded_conv_7/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_7/expand/Conv2D"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_7/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_7/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_7/expansion_output"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/weights"
input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_7/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_7/depthwise_output"
input: "MobilenetV2/expanded_conv_7/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_7/project/Conv2D"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_7/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_7/add"
op: "Add"
input: "MobilenetV2/expanded_conv_7/project/Identity"
input: "MobilenetV2/expanded_conv_7/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_7/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_8/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/weights"
input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_8/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_8/input"
input: "MobilenetV2/expanded_conv_8/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_8/expand/Conv2D"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_8/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_8/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_8/expansion_output"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/weights"
input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_8/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_8/depthwise_output"
input: "MobilenetV2/expanded_conv_8/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_8/project/Conv2D"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_8/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_8/add"
op: "Add"
input: "MobilenetV2/expanded_conv_8/project/Identity"
input: "MobilenetV2/expanded_conv_8/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_8/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_9/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/weights"
input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_9/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_9/input"
input: "MobilenetV2/expanded_conv_9/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_9/expand/Conv2D"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_9/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_9/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_9/expansion_output"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/weights"
input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_9/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_9/depthwise_output"
input: "MobilenetV2/expanded_conv_9/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_9/project/Conv2D"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_9/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_9/add"
op: "Add"
input: "MobilenetV2/expanded_conv_9/project/Identity"
input: "MobilenetV2/expanded_conv_9/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_9/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_10/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/weights"
input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_10/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_10/input"
input: "MobilenetV2/expanded_conv_10/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_10/expand/Conv2D"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_10/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_10/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_10/expansion_output"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/weights"
input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_10/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_10/depthwise_output"
input: "MobilenetV2/expanded_conv_10/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_10/project/Conv2D"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_10/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_10/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_11/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/weights"
input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_11/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_11/input"
input: "MobilenetV2/expanded_conv_11/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_11/expand/Conv2D"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_11/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_11/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 576
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_11/expansion_output"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 576
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/weights"
input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_11/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_11/depthwise_output"
input: "MobilenetV2/expanded_conv_11/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_11/project/Conv2D"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_11/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_11/add"
op: "Add"
input: "MobilenetV2/expanded_conv_11/project/Identity"
input: "MobilenetV2/expanded_conv_11/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_11/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_12/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/weights"
input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_12/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_12/input"
input: "MobilenetV2/expanded_conv_12/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_12/expand/Conv2D"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_12/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_12/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 576
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_12/expansion_output"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 576
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/weights"
input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_12/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_12/depthwise_output"
input: "MobilenetV2/expanded_conv_12/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_12/project/Conv2D"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_12/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_12/add"
op: "Add"
input: "MobilenetV2/expanded_conv_12/project/Identity"
input: "MobilenetV2/expanded_conv_12/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_12/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_13/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/weights"
input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_13/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_13/input"
input: "MobilenetV2/expanded_conv_13/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_13/expand/Conv2D"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_13/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_13/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 576
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_13/expansion_output"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 576
      }
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/weights"
input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_13/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_13/depthwise_output"
input: "MobilenetV2/expanded_conv_13/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_13/project/Conv2D"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_13/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_13/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_14/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 160
      }
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/weights"
input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_14/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_14/input"
input: "MobilenetV2/expanded_conv_14/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_14/expand/Conv2D"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_14/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_14/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 960
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_14/expansion_output"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 960
      }
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/weights"
input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_14/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_14/depthwise_output"
input: "MobilenetV2/expanded_conv_14/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_14/project/Conv2D"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_14/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_14/add"
op: "Add"
input: "MobilenetV2/expanded_conv_14/project/Identity"
input: "MobilenetV2/expanded_conv_14/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_14/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_15/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 160
      }
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/weights"
input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_15/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_15/input"
input: "MobilenetV2/expanded_conv_15/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_15/expand/Conv2D"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_15/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_15/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 960
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_15/expansion_output"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 960
      }
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/weights"
input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_15/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_15/depthwise_output"
input: "MobilenetV2/expanded_conv_15/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_15/project/Conv2D"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_15/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_15/add"
op: "Add"
input: "MobilenetV2/expanded_conv_15/project/Identity"
input: "MobilenetV2/expanded_conv_15/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_15/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_16/input"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 160
      }
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/weights"
input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_16/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_16/input"
input: "MobilenetV2/expanded_conv_16/expand/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_16/expand/Conv2D"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_16/expand/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_16/expansion_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 960
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise"
op: "DepthwiseConv2dNative"
input: "MobilenetV2/expanded_conv_16/expansion_output"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/Relu6"
op: "Relu6"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise_output"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 960
      }
      dim {
        size: 320
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/weights"
input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/expanded_conv_16/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_16/depthwise_output"
input: "MobilenetV2/expanded_conv_16/project/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 320
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 320
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 320
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 320
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 320
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 320
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 320
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 320
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/expanded_conv_16/project/Conv2D"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/read"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/Const"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/expanded_conv_16/project/Identity"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/expanded_conv_16/output"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
    }
  }
}
name: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
name: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
name: "MobilenetV2/Conv_1/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 320
      }
      dim {
        size: 1280
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv_1/weights/Assign"
op: "Assign"
input: "MobilenetV2/Conv_1/weights"
input: "MobilenetV2/Conv_1/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/weights/read"
op: "Identity"
input: "MobilenetV2/Conv_1/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
name: "MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/Conv_1/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
name: "MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
name: "MobilenetV2/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/Conv_1/Conv2D"
op: "Conv2D"
input: "MobilenetV2/expanded_conv_16/output"
input: "MobilenetV2/Conv_1/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1280
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones"
op: "Fill"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1280
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Assign"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/gamma"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/read"
op: "Identity"
input: "MobilenetV2/Conv_1/BatchNorm/gamma"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1280
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1280
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Assign"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/beta"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/read"
op: "Identity"
input: "MobilenetV2/Conv_1/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1280
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1280
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
input: "MobilenetV2/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_mean/read"
op: "Identity"
input: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1280
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones"
op: "Fill"
input: "MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
input: "MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1280
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
input: "MobilenetV2/Conv_1/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/moving_variance/read"
op: "Identity"
input: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "MobilenetV2/Conv_1/Conv2D"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/read"
input: "MobilenetV2/Conv_1/BatchNorm/beta/read"
input: "MobilenetV2/Conv_1/BatchNorm/Const"
input: "MobilenetV2/Conv_1/BatchNorm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.003000000026077032
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg/read"
op: "Identity"
input: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg/Sub"
op: "Sub"
input: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg/read"
input: "MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg/Mul"
op: "Mul"
input: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg/Sub"
input: "MobilenetV2/Conv_1/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
input: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg_1/read"
op: "Identity"
input: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
op: "Sub"
input: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg_1/read"
input: "MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
op: "Mul"
input: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
input: "MobilenetV2/Conv_1/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
input: "MobilenetV2/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "MobilenetV2/Conv_1/Relu6"
op: "Relu6"
input: "MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/embedding"
op: "Identity"
input: "MobilenetV2/Conv_1/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Logits/AvgPool"
op: "AvgPool"
input: "MobilenetV2/embedding"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 7
      i: 7
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/keep_prob"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.800000011920929
    }
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/Shape"
op: "Shape"
input: "MobilenetV2/Logits/AvgPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "MobilenetV2/Logits/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "MobilenetV2/Logits/Dropout/dropout/random_uniform/max"
input: "MobilenetV2/Logits/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "MobilenetV2/Logits/Dropout/dropout/random_uniform/RandomUniform"
input: "MobilenetV2/Logits/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/random_uniform"
op: "Add"
input: "MobilenetV2/Logits/Dropout/dropout/random_uniform/mul"
input: "MobilenetV2/Logits/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/add"
op: "Add"
input: "MobilenetV2/Logits/Dropout/dropout/keep_prob"
input: "MobilenetV2/Logits/Dropout/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/Floor"
op: "Floor"
input: "MobilenetV2/Logits/Dropout/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/div"
op: "RealDiv"
input: "MobilenetV2/Logits/AvgPool"
input: "MobilenetV2/Logits/Dropout/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Logits/Dropout/dropout/mul"
op: "Mul"
input: "MobilenetV2/Logits/Dropout/dropout/div"
input: "MobilenetV2/Logits/Dropout/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\000\005\000\000\351\003\000\000"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/mean"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/stddev"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09000000357627869
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/mul"
op: "Mul"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/TruncatedNormal"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal"
op: "Add"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/mul"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 1280
      }
      dim {
        size: 1001
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Assign"
op: "Assign"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Initializer/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/read"
op: "Identity"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/scale"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 3.9999998989515007e-05
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss"
op: "L2Loss"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer"
op: "Mul"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/scale"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1001
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1001
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Assign"
op: "Assign"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/read"
op: "Identity"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D"
op: "Conv2D"
input: "MobilenetV2/Logits/Dropout/dropout/mul"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd"
op: "BiasAdd"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
name: "MobilenetV2/Logits/Squeeze"
op: "Squeeze"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
      i: 2
    }
  }
}
name: "MobilenetV2/Logits/output"
op: "Identity"
input: "MobilenetV2/Logits/Squeeze"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Predictions/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\377\377\377\377\351\003\000\000"
    }
  }
}
name: "MobilenetV2/Predictions/Reshape"
op: "Reshape"
input: "MobilenetV2/Logits/output"
input: "MobilenetV2/Predictions/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Predictions/Softmax"
op: "Softmax"
input: "MobilenetV2/Predictions/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MobilenetV2/Predictions/Shape"
op: "Shape"
input: "MobilenetV2/Logits/output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Predictions/Reshape_1"
op: "Reshape"
input: "MobilenetV2/Predictions/Softmax"
input: "MobilenetV2/Predictions/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "Encoding_layer/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\351\003\000\000\200\000\000\000"
    }
  }
}
name: "Encoding_layer/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.07290019094944
    }
  }
}
name: "Encoding_layer/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.07290019094944
    }
  }
}
name: "Encoding_layer/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "Encoding_layer/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "Encoding_layer/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "Encoding_layer/weights/Initializer/random_uniform/max"
input: "Encoding_layer/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
name: "Encoding_layer/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "Encoding_layer/weights/Initializer/random_uniform/RandomUniform"
input: "Encoding_layer/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
name: "Encoding_layer/weights/Initializer/random_uniform"
op: "Add"
input: "Encoding_layer/weights/Initializer/random_uniform/mul"
input: "Encoding_layer/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
name: "Encoding_layer/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1001
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "Encoding_layer/weights/Assign"
op: "Assign"
input: "Encoding_layer/weights"
input: "Encoding_layer/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "Encoding_layer/weights/read"
op: "Identity"
input: "Encoding_layer/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
name: "Encoding_layer/biases/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "Encoding_layer/biases/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Encoding_layer/biases/Initializer/zeros"
op: "Fill"
input: "Encoding_layer/biases/Initializer/zeros/shape_as_tensor"
input: "Encoding_layer/biases/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "Encoding_layer/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "Encoding_layer/biases/Assign"
op: "Assign"
input: "Encoding_layer/biases"
input: "Encoding_layer/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "Encoding_layer/biases/read"
op: "Identity"
input: "Encoding_layer/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
name: "Encoding_layer/MatMul"
op: "MatMul"
input: "MobilenetV2/Logits/output"
input: "Encoding_layer/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
name: "Encoding_layer/BiasAdd"
op: "BiasAdd"
input: "Encoding_layer/MatMul"
input: "Encoding_layer/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
name: "Embeddings/Square"
op: "Square"
input: "Encoding_layer/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Embeddings/Sum/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
name: "Embeddings/Sum"
op: "Sum"
input: "Embeddings/Square"
input: "Embeddings/Sum/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
name: "Embeddings/Maximum/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999960041972e-13
    }
  }
}
name: "Embeddings/Maximum"
op: "Maximum"
input: "Embeddings/Sum"
input: "Embeddings/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Embeddings/Rsqrt"
op: "Rsqrt"
input: "Embeddings/Maximum"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Embeddings"
op: "Mul"
input: "Encoding_layer/BiasAdd"
input: "Embeddings/Rsqrt"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "save/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "model"
    }
  }
}
name: "save/SaveV2/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 265
        }
      }
      string_val: "Encoding_layer/biases"
      string_val: "Encoding_layer/weights"
      string_val: "MobilenetV2/Conv/BatchNorm/beta"
      string_val: "MobilenetV2/Conv/BatchNorm/gamma"
      string_val: "MobilenetV2/Conv/BatchNorm/moving_mean"
      string_val: "MobilenetV2/Conv/BatchNorm/moving_variance"
      string_val: "MobilenetV2/Conv/weights"
      string_val: "MobilenetV2/Conv_1/BatchNorm/beta"
      string_val: "MobilenetV2/Conv_1/BatchNorm/gamma"
      string_val: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
      string_val: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
      string_val: "MobilenetV2/Conv_1/weights"
      string_val: "MobilenetV2/Logits/Conv2d_1c_1x1/biases"
      string_val: "MobilenetV2/Logits/Conv2d_1c_1x1/weights"
      string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv/project/weights"
      string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_1/expand/weights"
      string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_1/project/weights"
      string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_10/expand/weights"
      string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_10/project/weights"
      string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_11/expand/weights"
      string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_11/project/weights"
      string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_12/expand/weights"
      string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_12/project/weights"
      string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_13/expand/weights"
      string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_13/project/weights"
      string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_14/expand/weights"
      string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_14/project/weights"
      string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_15/expand/weights"
      string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_15/project/weights"
      string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_16/expand/weights"
      string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_16/project/weights"
      string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_2/expand/weights"
      string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_2/project/weights"
      string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_3/expand/weights"
      string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_3/project/weights"
      string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_4/expand/weights"
      string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_4/project/weights"
      string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_5/expand/weights"
      string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_5/project/weights"
      string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_6/expand/weights"
      string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_6/project/weights"
      string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_7/expand/weights"
      string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_7/project/weights"
      string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_8/expand/weights"
      string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_8/project/weights"
      string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_9/expand/weights"
      string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_9/project/weights"
      string_val: "global_step"
    }
  }
}
name: "save/SaveV2/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 265
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}
name: "save/SaveV2"
op: "SaveV2"
input: "save/Const"
input: "save/SaveV2/tensor_names"
input: "save/SaveV2/shape_and_slices"
input: "Encoding_layer/biases"
input: "Encoding_layer/weights"
input: "MobilenetV2/Conv/BatchNorm/beta"
input: "MobilenetV2/Conv/BatchNorm/gamma"
input: "MobilenetV2/Conv/BatchNorm/moving_mean"
input: "MobilenetV2/Conv/BatchNorm/moving_variance"
input: "MobilenetV2/Conv/weights"
input: "MobilenetV2/Conv_1/BatchNorm/beta"
input: "MobilenetV2/Conv_1/BatchNorm/gamma"
input: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
input: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
input: "MobilenetV2/Conv_1/weights"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv/project/weights"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_1/expand/weights"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_1/project/weights"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_10/expand/weights"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_10/project/weights"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_11/expand/weights"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_11/project/weights"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_12/expand/weights"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_12/project/weights"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_13/expand/weights"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_13/project/weights"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_14/expand/weights"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_14/project/weights"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_15/expand/weights"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_15/project/weights"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_16/expand/weights"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_16/project/weights"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_2/expand/weights"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_2/project/weights"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_3/expand/weights"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_3/project/weights"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_4/expand/weights"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_4/project/weights"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_5/expand/weights"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_5/project/weights"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_6/expand/weights"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_6/project/weights"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_7/expand/weights"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_7/project/weights"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_8/expand/weights"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_8/project/weights"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_9/expand/weights"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
input: "MobilenetV2/expanded_conv_9/project/weights"
input: "global_step"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_INT32
    }
  }
}
name: "save/control_dependency"
op: "Identity"
input: "save/Const"
input: "^save/SaveV2"
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@save/Const"
    }
  }
}
name: "save/RestoreV2/tensor_names"
op: "Const"
device: "/device:CPU:0"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 265
        }
      }
      string_val: "Encoding_layer/biases"
      string_val: "Encoding_layer/weights"
      string_val: "MobilenetV2/Conv/BatchNorm/beta"
      string_val: "MobilenetV2/Conv/BatchNorm/gamma"
      string_val: "MobilenetV2/Conv/BatchNorm/moving_mean"
      string_val: "MobilenetV2/Conv/BatchNorm/moving_variance"
      string_val: "MobilenetV2/Conv/weights"
      string_val: "MobilenetV2/Conv_1/BatchNorm/beta"
      string_val: "MobilenetV2/Conv_1/BatchNorm/gamma"
      string_val: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
      string_val: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
      string_val: "MobilenetV2/Conv_1/weights"
      string_val: "MobilenetV2/Logits/Conv2d_1c_1x1/biases"
      string_val: "MobilenetV2/Logits/Conv2d_1c_1x1/weights"
      string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv/project/weights"
      string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_1/expand/weights"
      string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_1/project/weights"
      string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_10/expand/weights"
      string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_10/project/weights"
      string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_11/expand/weights"
      string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_11/project/weights"
      string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_12/expand/weights"
      string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_12/project/weights"
      string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_13/expand/weights"
      string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_13/project/weights"
      string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_14/expand/weights"
      string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_14/project/weights"
      string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_15/expand/weights"
      string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_15/project/weights"
      string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_16/expand/weights"
      string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_16/project/weights"
      string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_2/expand/weights"
      string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_2/project/weights"
      string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_3/expand/weights"
      string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_3/project/weights"
      string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_4/expand/weights"
      string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_4/project/weights"
      string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_5/expand/weights"
      string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_5/project/weights"
      string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_6/expand/weights"
      string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_6/project/weights"
      string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_7/expand/weights"
      string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_7/project/weights"
      string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_8/expand/weights"
      string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_8/project/weights"
      string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_9/expand/weights"
      string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      string_val: "MobilenetV2/expanded_conv_9/project/weights"
      string_val: "global_step"
    }
  }
}
name: "save/RestoreV2/shape_and_slices"
op: "Const"
device: "/device:CPU:0"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 265
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}
name: "save/RestoreV2"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2/tensor_names"
input: "save/RestoreV2/shape_and_slices"
device: "/device:CPU:0"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_INT32
    }
  }
}
name: "save/Assign"
op: "Assign"
input: "Encoding_layer/biases"
input: "save/RestoreV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_1"
op: "Assign"
input: "Encoding_layer/weights"
input: "save/RestoreV2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_2"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/beta"
input: "save/RestoreV2:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_3"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/gamma"
input: "save/RestoreV2:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_4"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/moving_mean"
input: "save/RestoreV2:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_5"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/moving_variance"
input: "save/RestoreV2:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_6"
op: "Assign"
input: "MobilenetV2/Conv/weights"
input: "save/RestoreV2:6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_7"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/beta"
input: "save/RestoreV2:7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_8"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/gamma"
input: "save/RestoreV2:8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_9"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/moving_mean"
input: "save/RestoreV2:9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_10"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/moving_variance"
input: "save/RestoreV2:10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_11"
op: "Assign"
input: "MobilenetV2/Conv_1/weights"
input: "save/RestoreV2:11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_12"
op: "Assign"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases"
input: "save/RestoreV2:12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_13"
op: "Assign"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights"
input: "save/RestoreV2:13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_14"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
input: "save/RestoreV2:14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_15"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_16"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_17"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_18"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
input: "save/RestoreV2:18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_19"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
input: "save/RestoreV2:19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_20"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
input: "save/RestoreV2:20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_21"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
input: "save/RestoreV2:21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_22"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
input: "save/RestoreV2:22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_23"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/weights"
input: "save/RestoreV2:23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_24"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
input: "save/RestoreV2:24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_25"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_26"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_27"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_28"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
input: "save/RestoreV2:28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_29"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
input: "save/RestoreV2:29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_30"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
input: "save/RestoreV2:30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_31"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:31"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_32"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:32"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_33"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/weights"
input: "save/RestoreV2:33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_34"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
input: "save/RestoreV2:34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_35"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
input: "save/RestoreV2:35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_36"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
input: "save/RestoreV2:36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_37"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
input: "save/RestoreV2:37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_38"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/weights"
input: "save/RestoreV2:38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_39"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
input: "save/RestoreV2:39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_40"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_41"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_42"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_43"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
input: "save/RestoreV2:43"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_44"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
input: "save/RestoreV2:44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_45"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
input: "save/RestoreV2:45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_46"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_47"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:47"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_48"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/weights"
input: "save/RestoreV2:48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_49"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
input: "save/RestoreV2:49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_50"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
input: "save/RestoreV2:50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_51"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
input: "save/RestoreV2:51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_52"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
input: "save/RestoreV2:52"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_53"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/weights"
input: "save/RestoreV2:53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_54"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
input: "save/RestoreV2:54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_55"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_56"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_57"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_58"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
input: "save/RestoreV2:58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_59"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
input: "save/RestoreV2:59"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_60"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
input: "save/RestoreV2:60"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_61"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_62"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_63"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/weights"
input: "save/RestoreV2:63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_64"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
input: "save/RestoreV2:64"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_65"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
input: "save/RestoreV2:65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_66"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
input: "save/RestoreV2:66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_67"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
input: "save/RestoreV2:67"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_68"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/weights"
input: "save/RestoreV2:68"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_69"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
input: "save/RestoreV2:69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_70"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_71"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:71"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_72"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:72"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_73"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
input: "save/RestoreV2:73"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_74"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
input: "save/RestoreV2:74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_75"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
input: "save/RestoreV2:75"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_76"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:76"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_77"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:77"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_78"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/weights"
input: "save/RestoreV2:78"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_79"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
input: "save/RestoreV2:79"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_80"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
input: "save/RestoreV2:80"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_81"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
input: "save/RestoreV2:81"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_82"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
input: "save/RestoreV2:82"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_83"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/weights"
input: "save/RestoreV2:83"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_84"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
input: "save/RestoreV2:84"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_85"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:85"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_86"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_87"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:87"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_88"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
input: "save/RestoreV2:88"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_89"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
input: "save/RestoreV2:89"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_90"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
input: "save/RestoreV2:90"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_91"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:91"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_92"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:92"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_93"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/weights"
input: "save/RestoreV2:93"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_94"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
input: "save/RestoreV2:94"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_95"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
input: "save/RestoreV2:95"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_96"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
input: "save/RestoreV2:96"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_97"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
input: "save/RestoreV2:97"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_98"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/weights"
input: "save/RestoreV2:98"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_99"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
input: "save/RestoreV2:99"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_100"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:100"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_101"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:101"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_102"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:102"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_103"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
input: "save/RestoreV2:103"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_104"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
input: "save/RestoreV2:104"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_105"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
input: "save/RestoreV2:105"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_106"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:106"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_107"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:107"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_108"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/weights"
input: "save/RestoreV2:108"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_109"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
input: "save/RestoreV2:109"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_110"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
input: "save/RestoreV2:110"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_111"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
input: "save/RestoreV2:111"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_112"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
input: "save/RestoreV2:112"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_113"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/weights"
input: "save/RestoreV2:113"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_114"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
input: "save/RestoreV2:114"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_115"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:115"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_116"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:116"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_117"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:117"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_118"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
input: "save/RestoreV2:118"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_119"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
input: "save/RestoreV2:119"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_120"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
input: "save/RestoreV2:120"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_121"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:121"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_122"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:122"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_123"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/weights"
input: "save/RestoreV2:123"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_124"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
input: "save/RestoreV2:124"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_125"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
input: "save/RestoreV2:125"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_126"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
input: "save/RestoreV2:126"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_127"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
input: "save/RestoreV2:127"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_128"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/weights"
input: "save/RestoreV2:128"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_129"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
input: "save/RestoreV2:129"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_130"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:130"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_131"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:131"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_132"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:132"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_133"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
input: "save/RestoreV2:133"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_134"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
input: "save/RestoreV2:134"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_135"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
input: "save/RestoreV2:135"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_136"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:136"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_137"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:137"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_138"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/weights"
input: "save/RestoreV2:138"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_139"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
input: "save/RestoreV2:139"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_140"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
input: "save/RestoreV2:140"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_141"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
input: "save/RestoreV2:141"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_142"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
input: "save/RestoreV2:142"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_143"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/weights"
input: "save/RestoreV2:143"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_144"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
input: "save/RestoreV2:144"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_145"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:145"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_146"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:146"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_147"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:147"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_148"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
input: "save/RestoreV2:148"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_149"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
input: "save/RestoreV2:149"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_150"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
input: "save/RestoreV2:150"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_151"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:151"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_152"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:152"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_153"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/weights"
input: "save/RestoreV2:153"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_154"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
input: "save/RestoreV2:154"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_155"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
input: "save/RestoreV2:155"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_156"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
input: "save/RestoreV2:156"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_157"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
input: "save/RestoreV2:157"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_158"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/weights"
input: "save/RestoreV2:158"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_159"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
input: "save/RestoreV2:159"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_160"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:160"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_161"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:161"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_162"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:162"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_163"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
input: "save/RestoreV2:163"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_164"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
input: "save/RestoreV2:164"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_165"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
input: "save/RestoreV2:165"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_166"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:166"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_167"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:167"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_168"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/weights"
input: "save/RestoreV2:168"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_169"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
input: "save/RestoreV2:169"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_170"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
input: "save/RestoreV2:170"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_171"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
input: "save/RestoreV2:171"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_172"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
input: "save/RestoreV2:172"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_173"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/weights"
input: "save/RestoreV2:173"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_174"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
input: "save/RestoreV2:174"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_175"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:175"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_176"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:176"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_177"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:177"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_178"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
input: "save/RestoreV2:178"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_179"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
input: "save/RestoreV2:179"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_180"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
input: "save/RestoreV2:180"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_181"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:181"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_182"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:182"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_183"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/weights"
input: "save/RestoreV2:183"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_184"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
input: "save/RestoreV2:184"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_185"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
input: "save/RestoreV2:185"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_186"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
input: "save/RestoreV2:186"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_187"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
input: "save/RestoreV2:187"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_188"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/weights"
input: "save/RestoreV2:188"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_189"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
input: "save/RestoreV2:189"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_190"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:190"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_191"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:191"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_192"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:192"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_193"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
input: "save/RestoreV2:193"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_194"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
input: "save/RestoreV2:194"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_195"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
input: "save/RestoreV2:195"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_196"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:196"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_197"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:197"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_198"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/weights"
input: "save/RestoreV2:198"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_199"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
input: "save/RestoreV2:199"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_200"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
input: "save/RestoreV2:200"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_201"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
input: "save/RestoreV2:201"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_202"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
input: "save/RestoreV2:202"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_203"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/weights"
input: "save/RestoreV2:203"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_204"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
input: "save/RestoreV2:204"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_205"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:205"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_206"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:206"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_207"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:207"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_208"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
input: "save/RestoreV2:208"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_209"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
input: "save/RestoreV2:209"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_210"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
input: "save/RestoreV2:210"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_211"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:211"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_212"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:212"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_213"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/weights"
input: "save/RestoreV2:213"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_214"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
input: "save/RestoreV2:214"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_215"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
input: "save/RestoreV2:215"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_216"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
input: "save/RestoreV2:216"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_217"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
input: "save/RestoreV2:217"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_218"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/weights"
input: "save/RestoreV2:218"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_219"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
input: "save/RestoreV2:219"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_220"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:220"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_221"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:221"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_222"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:222"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_223"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
input: "save/RestoreV2:223"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_224"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
input: "save/RestoreV2:224"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_225"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
input: "save/RestoreV2:225"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_226"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:226"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_227"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:227"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_228"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/weights"
input: "save/RestoreV2:228"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_229"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
input: "save/RestoreV2:229"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_230"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
input: "save/RestoreV2:230"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_231"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
input: "save/RestoreV2:231"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_232"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
input: "save/RestoreV2:232"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_233"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/weights"
input: "save/RestoreV2:233"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_234"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
input: "save/RestoreV2:234"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_235"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:235"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_236"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:236"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_237"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:237"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_238"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
input: "save/RestoreV2:238"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_239"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
input: "save/RestoreV2:239"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_240"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
input: "save/RestoreV2:240"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_241"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:241"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_242"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:242"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_243"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/weights"
input: "save/RestoreV2:243"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_244"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
input: "save/RestoreV2:244"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_245"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
input: "save/RestoreV2:245"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_246"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
input: "save/RestoreV2:246"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_247"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
input: "save/RestoreV2:247"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_248"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/weights"
input: "save/RestoreV2:248"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_249"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
input: "save/RestoreV2:249"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_250"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
input: "save/RestoreV2:250"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_251"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
input: "save/RestoreV2:251"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_252"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
input: "save/RestoreV2:252"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_253"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
input: "save/RestoreV2:253"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_254"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
input: "save/RestoreV2:254"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_255"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
input: "save/RestoreV2:255"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_256"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
input: "save/RestoreV2:256"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_257"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
input: "save/RestoreV2:257"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_258"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/weights"
input: "save/RestoreV2:258"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_259"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
input: "save/RestoreV2:259"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_260"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
input: "save/RestoreV2:260"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_261"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
input: "save/RestoreV2:261"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_262"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
input: "save/RestoreV2:262"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_263"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/weights"
input: "save/RestoreV2:263"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_264"
op: "Assign"
input: "global_step"
input: "save/RestoreV2:264"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@global_step"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/restore_all"
op: "NoOp"
input: "^save/Assign"
input: "^save/Assign_1"
input: "^save/Assign_2"
input: "^save/Assign_3"
input: "^save/Assign_4"
input: "^save/Assign_5"
input: "^save/Assign_6"
input: "^save/Assign_7"
input: "^save/Assign_8"
input: "^save/Assign_9"
input: "^save/Assign_10"
input: "^save/Assign_11"
input: "^save/Assign_12"
input: "^save/Assign_13"
input: "^save/Assign_14"
input: "^save/Assign_15"
input: "^save/Assign_16"
input: "^save/Assign_17"
input: "^save/Assign_18"
input: "^save/Assign_19"
input: "^save/Assign_20"
input: "^save/Assign_21"
input: "^save/Assign_22"
input: "^save/Assign_23"
input: "^save/Assign_24"
input: "^save/Assign_25"
input: "^save/Assign_26"
input: "^save/Assign_27"
input: "^save/Assign_28"
input: "^save/Assign_29"
input: "^save/Assign_30"
input: "^save/Assign_31"
input: "^save/Assign_32"
input: "^save/Assign_33"
input: "^save/Assign_34"
input: "^save/Assign_35"
input: "^save/Assign_36"
input: "^save/Assign_37"
input: "^save/Assign_38"
input: "^save/Assign_39"
input: "^save/Assign_40"
input: "^save/Assign_41"
input: "^save/Assign_42"
input: "^save/Assign_43"
input: "^save/Assign_44"
input: "^save/Assign_45"
input: "^save/Assign_46"
input: "^save/Assign_47"
input: "^save/Assign_48"
input: "^save/Assign_49"
input: "^save/Assign_50"
input: "^save/Assign_51"
input: "^save/Assign_52"
input: "^save/Assign_53"
input: "^save/Assign_54"
input: "^save/Assign_55"
input: "^save/Assign_56"
input: "^save/Assign_57"
input: "^save/Assign_58"
input: "^save/Assign_59"
input: "^save/Assign_60"
input: "^save/Assign_61"
input: "^save/Assign_62"
input: "^save/Assign_63"
input: "^save/Assign_64"
input: "^save/Assign_65"
input: "^save/Assign_66"
input: "^save/Assign_67"
input: "^save/Assign_68"
input: "^save/Assign_69"
input: "^save/Assign_70"
input: "^save/Assign_71"
input: "^save/Assign_72"
input: "^save/Assign_73"
input: "^save/Assign_74"
input: "^save/Assign_75"
input: "^save/Assign_76"
input: "^save/Assign_77"
input: "^save/Assign_78"
input: "^save/Assign_79"
input: "^save/Assign_80"
input: "^save/Assign_81"
input: "^save/Assign_82"
input: "^save/Assign_83"
input: "^save/Assign_84"
input: "^save/Assign_85"
input: "^save/Assign_86"
input: "^save/Assign_87"
input: "^save/Assign_88"
input: "^save/Assign_89"
input: "^save/Assign_90"
input: "^save/Assign_91"
input: "^save/Assign_92"
input: "^save/Assign_93"
input: "^save/Assign_94"
input: "^save/Assign_95"
input: "^save/Assign_96"
input: "^save/Assign_97"
input: "^save/Assign_98"
input: "^save/Assign_99"
input: "^save/Assign_100"
input: "^save/Assign_101"
input: "^save/Assign_102"
input: "^save/Assign_103"
input: "^save/Assign_104"
input: "^save/Assign_105"
input: "^save/Assign_106"
input: "^save/Assign_107"
input: "^save/Assign_108"
input: "^save/Assign_109"
input: "^save/Assign_110"
input: "^save/Assign_111"
input: "^save/Assign_112"
input: "^save/Assign_113"
input: "^save/Assign_114"
input: "^save/Assign_115"
input: "^save/Assign_116"
input: "^save/Assign_117"
input: "^save/Assign_118"
input: "^save/Assign_119"
input: "^save/Assign_120"
input: "^save/Assign_121"
input: "^save/Assign_122"
input: "^save/Assign_123"
input: "^save/Assign_124"
input: "^save/Assign_125"
input: "^save/Assign_126"
input: "^save/Assign_127"
input: "^save/Assign_128"
input: "^save/Assign_129"
input: "^save/Assign_130"
input: "^save/Assign_131"
input: "^save/Assign_132"
input: "^save/Assign_133"
input: "^save/Assign_134"
input: "^save/Assign_135"
input: "^save/Assign_136"
input: "^save/Assign_137"
input: "^save/Assign_138"
input: "^save/Assign_139"
input: "^save/Assign_140"
input: "^save/Assign_141"
input: "^save/Assign_142"
input: "^save/Assign_143"
input: "^save/Assign_144"
input: "^save/Assign_145"
input: "^save/Assign_146"
input: "^save/Assign_147"
input: "^save/Assign_148"
input: "^save/Assign_149"
input: "^save/Assign_150"
input: "^save/Assign_151"
input: "^save/Assign_152"
input: "^save/Assign_153"
input: "^save/Assign_154"
input: "^save/Assign_155"
input: "^save/Assign_156"
input: "^save/Assign_157"
input: "^save/Assign_158"
input: "^save/Assign_159"
input: "^save/Assign_160"
input: "^save/Assign_161"
input: "^save/Assign_162"
input: "^save/Assign_163"
input: "^save/Assign_164"
input: "^save/Assign_165"
input: "^save/Assign_166"
input: "^save/Assign_167"
input: "^save/Assign_168"
input: "^save/Assign_169"
input: "^save/Assign_170"
input: "^save/Assign_171"
input: "^save/Assign_172"
input: "^save/Assign_173"
input: "^save/Assign_174"
input: "^save/Assign_175"
input: "^save/Assign_176"
input: "^save/Assign_177"
input: "^save/Assign_178"
input: "^save/Assign_179"
input: "^save/Assign_180"
input: "^save/Assign_181"
input: "^save/Assign_182"
input: "^save/Assign_183"
input: "^save/Assign_184"
input: "^save/Assign_185"
input: "^save/Assign_186"
input: "^save/Assign_187"
input: "^save/Assign_188"
input: "^save/Assign_189"
input: "^save/Assign_190"
input: "^save/Assign_191"
input: "^save/Assign_192"
input: "^save/Assign_193"
input: "^save/Assign_194"
input: "^save/Assign_195"
input: "^save/Assign_196"
input: "^save/Assign_197"
input: "^save/Assign_198"
input: "^save/Assign_199"
input: "^save/Assign_200"
input: "^save/Assign_201"
input: "^save/Assign_202"
input: "^save/Assign_203"
input: "^save/Assign_204"
input: "^save/Assign_205"
input: "^save/Assign_206"
input: "^save/Assign_207"
input: "^save/Assign_208"
input: "^save/Assign_209"
input: "^save/Assign_210"
input: "^save/Assign_211"
input: "^save/Assign_212"
input: "^save/Assign_213"
input: "^save/Assign_214"
input: "^save/Assign_215"
input: "^save/Assign_216"
input: "^save/Assign_217"
input: "^save/Assign_218"
input: "^save/Assign_219"
input: "^save/Assign_220"
input: "^save/Assign_221"
input: "^save/Assign_222"
input: "^save/Assign_223"
input: "^save/Assign_224"
input: "^save/Assign_225"
input: "^save/Assign_226"
input: "^save/Assign_227"
input: "^save/Assign_228"
input: "^save/Assign_229"
input: "^save/Assign_230"
input: "^save/Assign_231"
input: "^save/Assign_232"
input: "^save/Assign_233"
input: "^save/Assign_234"
input: "^save/Assign_235"
input: "^save/Assign_236"
input: "^save/Assign_237"
input: "^save/Assign_238"
input: "^save/Assign_239"
input: "^save/Assign_240"
input: "^save/Assign_241"
input: "^save/Assign_242"
input: "^save/Assign_243"
input: "^save/Assign_244"
input: "^save/Assign_245"
input: "^save/Assign_246"
input: "^save/Assign_247"
input: "^save/Assign_248"
input: "^save/Assign_249"
input: "^save/Assign_250"
input: "^save/Assign_251"
input: "^save/Assign_252"
input: "^save/Assign_253"
input: "^save/Assign_254"
input: "^save/Assign_255"
input: "^save/Assign_256"
input: "^save/Assign_257"
input: "^save/Assign_258"
input: "^save/Assign_259"
input: "^save/Assign_260"
input: "^save/Assign_261"
input: "^save/Assign_262"
input: "^save/Assign_263"
input: "^save/Assign_264"
name: "ExponentialDecay/learning_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.9999999949504854e-06
    }
  }
}
name: "ExponentialDecay/Cast"
op: "Cast"
input: "global_step/read"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_INT32
  }
}
name: "ExponentialDecay/Cast_1/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 200
    }
  }
}
name: "ExponentialDecay/Cast_1"
op: "Cast"
input: "ExponentialDecay/Cast_1/x"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_INT32
  }
}
name: "ExponentialDecay/Cast_2/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "ExponentialDecay/truediv"
op: "RealDiv"
input: "ExponentialDecay/Cast"
input: "ExponentialDecay/Cast_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "ExponentialDecay/Pow"
op: "Pow"
input: "ExponentialDecay/Cast_2/x"
input: "ExponentialDecay/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "ExponentialDecay"
op: "Mul"
input: "ExponentialDecay/learning_rate"
input: "ExponentialDecay/Pow"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice/stack"
input: "strided_slice/stack_1"
input: "strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "strided_slice_1/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_1/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
name: "strided_slice_1/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_1"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_1/stack"
input: "strided_slice_1/stack_1"
input: "strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "Sub"
op: "Sub"
input: "strided_slice"
input: "strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Square"
op: "Square"
input: "Sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "Sum"
op: "Sum"
input: "Square"
input: "Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Maximum"
op: "Maximum"
input: "Sum"
input: "Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "add/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "add"
op: "Add"
input: "add/x"
input: "Maximum"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "strided_slice_2/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
name: "strided_slice_2/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}
name: "strided_slice_2/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_2"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_2/stack"
input: "strided_slice_2/stack_1"
input: "strided_slice_2/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "strided_slice_3/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}
name: "strided_slice_3/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 4
    }
  }
}
name: "strided_slice_3/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_3"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_3/stack"
input: "strided_slice_3/stack_1"
input: "strided_slice_3/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "Sub_1"
op: "Sub"
input: "strided_slice_2"
input: "strided_slice_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Square_1"
op: "Square"
input: "Sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "Sum_1"
op: "Sum"
input: "Square_1"
input: "Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Maximum_1"
op: "Maximum"
input: "Sum_1"
input: "Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "add_1"
op: "Add"
input: "add"
input: "Maximum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "strided_slice_4/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 4
    }
  }
}
name: "strided_slice_4/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 5
    }
  }
}
name: "strided_slice_4/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_4"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_4/stack"
input: "strided_slice_4/stack_1"
input: "strided_slice_4/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "strided_slice_5/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 5
    }
  }
}
name: "strided_slice_5/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 6
    }
  }
}
name: "strided_slice_5/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_5"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_5/stack"
input: "strided_slice_5/stack_1"
input: "strided_slice_5/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "Sub_2"
op: "Sub"
input: "strided_slice_4"
input: "strided_slice_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Square_2"
op: "Square"
input: "Sub_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Const_4"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "Sum_2"
op: "Sum"
input: "Square_2"
input: "Const_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "Const_5"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Maximum_2"
op: "Maximum"
input: "Sum_2"
input: "Const_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "add_2"
op: "Add"
input: "add_1"
input: "Maximum_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "strided_slice_6/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 6
    }
  }
}
name: "strided_slice_6/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 7
    }
  }
}
name: "strided_slice_6/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_6"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_6/stack"
input: "strided_slice_6/stack_1"
input: "strided_slice_6/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "strided_slice_7/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 7
    }
  }
}
name: "strided_slice_7/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 8
    }
  }
}
name: "strided_slice_7/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_7"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_7/stack"
input: "strided_slice_7/stack_1"
input: "strided_slice_7/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "Sub_3"
op: "Sub"
input: "strided_slice_6"
input: "strided_slice_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Square_3"
op: "Square"
input: "Sub_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Const_6"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "Sum_3"
op: "Sum"
input: "Square_3"
input: "Const_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "Const_7"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Maximum_3"
op: "Maximum"
input: "Sum_3"
input: "Const_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "add_3"
op: "Add"
input: "add_2"
input: "Maximum_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "strided_slice_8/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 8
    }
  }
}
name: "strided_slice_8/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
name: "strided_slice_8/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_8"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_8/stack"
input: "strided_slice_8/stack_1"
input: "strided_slice_8/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "strided_slice_9/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
name: "strided_slice_9/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 10
    }
  }
}
name: "strided_slice_9/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_9"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_9/stack"
input: "strided_slice_9/stack_1"
input: "strided_slice_9/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "Sub_4"
op: "Sub"
input: "strided_slice_8"
input: "strided_slice_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Square_4"
op: "Square"
input: "Sub_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Const_8"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "Sum_4"
op: "Sum"
input: "Square_4"
input: "Const_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "Const_9"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Maximum_4"
op: "Maximum"
input: "Sum_4"
input: "Const_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "add_4"
op: "Add"
input: "add_3"
input: "Maximum_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "strided_slice_10/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 10
    }
  }
}
name: "strided_slice_10/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 11
    }
  }
}
name: "strided_slice_10/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_10"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_10/stack"
input: "strided_slice_10/stack_1"
input: "strided_slice_10/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "strided_slice_11/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 11
    }
  }
}
name: "strided_slice_11/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 12
    }
  }
}
name: "strided_slice_11/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_11"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_11/stack"
input: "strided_slice_11/stack_1"
input: "strided_slice_11/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "Sub_5"
op: "Sub"
input: "strided_slice_10"
input: "strided_slice_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Square_5"
op: "Square"
input: "Sub_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Const_10"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "Sum_5"
op: "Sum"
input: "Square_5"
input: "Const_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "Const_11"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Maximum_5"
op: "Maximum"
input: "Sum_5"
input: "Const_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "add_5"
op: "Add"
input: "add_4"
input: "Maximum_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "strided_slice_12/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 12
    }
  }
}
name: "strided_slice_12/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 13
    }
  }
}
name: "strided_slice_12/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_12"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_12/stack"
input: "strided_slice_12/stack_1"
input: "strided_slice_12/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "strided_slice_13/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 13
    }
  }
}
name: "strided_slice_13/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 14
    }
  }
}
name: "strided_slice_13/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_13"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_13/stack"
input: "strided_slice_13/stack_1"
input: "strided_slice_13/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "Sub_6"
op: "Sub"
input: "strided_slice_12"
input: "strided_slice_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Square_6"
op: "Square"
input: "Sub_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Const_12"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "Sum_6"
op: "Sum"
input: "Square_6"
input: "Const_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "Const_13"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Maximum_6"
op: "Maximum"
input: "Sum_6"
input: "Const_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "add_6"
op: "Add"
input: "add_5"
input: "Maximum_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "strided_slice_14/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 14
    }
  }
}
name: "strided_slice_14/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 15
    }
  }
}
name: "strided_slice_14/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_14"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_14/stack"
input: "strided_slice_14/stack_1"
input: "strided_slice_14/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "strided_slice_15/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 15
    }
  }
}
name: "strided_slice_15/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
name: "strided_slice_15/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_15"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_15/stack"
input: "strided_slice_15/stack_1"
input: "strided_slice_15/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "Sub_7"
op: "Sub"
input: "strided_slice_14"
input: "strided_slice_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Square_7"
op: "Square"
input: "Sub_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Const_14"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "Sum_7"
op: "Sum"
input: "Square_7"
input: "Const_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "Const_15"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Maximum_7"
op: "Maximum"
input: "Sum_7"
input: "Const_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "add_7"
op: "Add"
input: "add_6"
input: "Maximum_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "strided_slice_16/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
name: "strided_slice_16/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 17
    }
  }
}
name: "strided_slice_16/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_16"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_16/stack"
input: "strided_slice_16/stack_1"
input: "strided_slice_16/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "strided_slice_17/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 17
    }
  }
}
name: "strided_slice_17/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 18
    }
  }
}
name: "strided_slice_17/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_17"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_17/stack"
input: "strided_slice_17/stack_1"
input: "strided_slice_17/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "Sub_8"
op: "Sub"
input: "strided_slice_16"
input: "strided_slice_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Square_8"
op: "Square"
input: "Sub_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Const_16"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "Sum_8"
op: "Sum"
input: "Square_8"
input: "Const_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "Const_17"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Maximum_8"
op: "Maximum"
input: "Sum_8"
input: "Const_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "add_8"
op: "Add"
input: "add_7"
input: "Maximum_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "strided_slice_18/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 18
    }
  }
}
name: "strided_slice_18/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 19
    }
  }
}
name: "strided_slice_18/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_18"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_18/stack"
input: "strided_slice_18/stack_1"
input: "strided_slice_18/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "strided_slice_19/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 19
    }
  }
}
name: "strided_slice_19/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 20
    }
  }
}
name: "strided_slice_19/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_19"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_19/stack"
input: "strided_slice_19/stack_1"
input: "strided_slice_19/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "Sub_9"
op: "Sub"
input: "strided_slice_18"
input: "strided_slice_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Square_9"
op: "Square"
input: "Sub_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Const_18"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "Sum_9"
op: "Sum"
input: "Square_9"
input: "Const_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "Const_19"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Maximum_9"
op: "Maximum"
input: "Sum_9"
input: "Const_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "add_9"
op: "Add"
input: "add_8"
input: "Maximum_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "strided_slice_20/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 20
    }
  }
}
name: "strided_slice_20/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 21
    }
  }
}
name: "strided_slice_20/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_20"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_20/stack"
input: "strided_slice_20/stack_1"
input: "strided_slice_20/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "strided_slice_21/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 21
    }
  }
}
name: "strided_slice_21/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 22
    }
  }
}
name: "strided_slice_21/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "strided_slice_21"
op: "StridedSlice"
input: "Embeddings"
input: "strided_slice_21/stack"
input: "strided_slice_21/stack_1"
input: "strided_slice_21/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "Sub_10"
op: "Sub"
input: "strided_slice_20"
input: "strided_slice_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Square_10"
op: "Square"
input: "Sub_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Const_20"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
name: "Sum_10"
op: "Sum"
input: "Square_10"
input: "Const_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "Const_21"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Maximum_10"
op: "Maximum"
input: "Sum_10"
input: "Const_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "add_10"
op: "Add"
input: "add_9"
input: "Maximum_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "total_loss"
op: "AddN"
input: "add_10"
input: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer"
attr {
  key: "N"
  value {
    i: 37
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/grad_ys_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "gradients/Fill"
op: "Fill"
input: "gradients/Shape"
input: "gradients/grad_ys_0"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/total_loss_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Fill"
name: "gradients/total_loss_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_5"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_6"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_7"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_8"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_9"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_10"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_11"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_12"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_13"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_14"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_15"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_16"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_17"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_18"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_19"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_20"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_21"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_22"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_23"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_24"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_25"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_26"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_27"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_28"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_29"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_30"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_31"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_32"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_33"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_34"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_35"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/total_loss_grad/tuple/control_dependency_36"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/total_loss_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_10_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/total_loss_grad/tuple/control_dependency"
name: "gradients/add_10_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/total_loss_grad/tuple/control_dependency"
input: "^gradients/add_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_10_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/total_loss_grad/tuple/control_dependency"
input: "^gradients/add_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_1"
input: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_1"
input: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_2"
input: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_2"
input: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_3"
input: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_3"
input: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_4"
input: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_4"
input: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_5"
input: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_5"
input: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_6"
input: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_6"
input: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_7"
input: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_7"
input: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_8"
input: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_8"
input: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_9"
input: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_9"
input: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_10"
input: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_10"
input: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_11"
input: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_11"
input: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_12"
input: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_12"
input: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_13"
input: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_13"
input: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_14"
input: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_14"
input: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_15"
input: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_15"
input: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_16"
input: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_16"
input: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_17"
input: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_17"
input: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_18"
input: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_18"
input: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_19"
input: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_19"
input: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_20"
input: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_20"
input: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_21"
input: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_21"
input: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_22"
input: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_22"
input: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_23"
input: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_23"
input: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_24"
input: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_24"
input: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_25"
input: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_25"
input: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_26"
input: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_26"
input: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_27"
input: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_27"
input: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_28"
input: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_28"
input: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_29"
input: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_29"
input: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_30"
input: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_30"
input: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_31"
input: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_31"
input: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_32"
input: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_32"
input: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_33"
input: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_33"
input: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_34"
input: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_34"
input: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_35"
input: "MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_35"
input: "MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_36"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
op: "Mul"
input: "gradients/total_loss_grad/tuple/control_dependency_36"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/scale"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
input: "^gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
    }
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
input: "^gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
    }
  }
}
name: "gradients/add_9_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_10_grad/tuple/control_dependency"
name: "gradients/add_9_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_10_grad/tuple/control_dependency"
input: "^gradients/add_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_9_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_10_grad/tuple/control_dependency"
input: "^gradients/add_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/Maximum_10_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_10_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_10_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_10_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Maximum_10_grad/zeros"
op: "Fill"
input: "gradients/Maximum_10_grad/Shape_2"
input: "gradients/Maximum_10_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_10_grad/GreaterEqual"
op: "GreaterEqual"
input: "Sum_10"
input: "Const_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_10_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Maximum_10_grad/Shape"
input: "gradients/Maximum_10_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_10_grad/Select"
op: "Select"
input: "gradients/Maximum_10_grad/GreaterEqual"
input: "gradients/add_10_grad/tuple/control_dependency_1"
input: "gradients/Maximum_10_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_10_grad/Select_1"
op: "Select"
input: "gradients/Maximum_10_grad/GreaterEqual"
input: "gradients/Maximum_10_grad/zeros"
input: "gradients/add_10_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_10_grad/Sum"
op: "Sum"
input: "gradients/Maximum_10_grad/Select"
input: "gradients/Maximum_10_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_10_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_10_grad/Sum"
input: "gradients/Maximum_10_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_10_grad/Sum_1"
op: "Sum"
input: "gradients/Maximum_10_grad/Select_1"
input: "gradients/Maximum_10_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_10_grad/Reshape_1"
op: "Reshape"
input: "gradients/Maximum_10_grad/Sum_1"
input: "gradients/Maximum_10_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_10_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Maximum_10_grad/Reshape"
input: "^gradients/Maximum_10_grad/Reshape_1"
name: "gradients/Maximum_10_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Maximum_10_grad/Reshape"
input: "^gradients/Maximum_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_10_grad/Reshape"
    }
  }
}
name: "gradients/Maximum_10_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Maximum_10_grad/Reshape_1"
input: "^gradients/Maximum_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_10_grad/Reshape_1"
    }
  }
}
name: "gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/Conv/weights/read"
input: "gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_1/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_2/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_3/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_4/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_5/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_6/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_7/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_8/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_9/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_10/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_11/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_12/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_13/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_14/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_15/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/expanded_conv_16/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/Conv_1/weights/read"
input: "gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
op: "Mul"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/read"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/add_8_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_9_grad/tuple/control_dependency"
name: "gradients/add_8_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_9_grad/tuple/control_dependency"
input: "^gradients/add_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_8_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_9_grad/tuple/control_dependency"
input: "^gradients/add_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/Maximum_9_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_9_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_9_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_9_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Maximum_9_grad/zeros"
op: "Fill"
input: "gradients/Maximum_9_grad/Shape_2"
input: "gradients/Maximum_9_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_9_grad/GreaterEqual"
op: "GreaterEqual"
input: "Sum_9"
input: "Const_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_9_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Maximum_9_grad/Shape"
input: "gradients/Maximum_9_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_9_grad/Select"
op: "Select"
input: "gradients/Maximum_9_grad/GreaterEqual"
input: "gradients/add_9_grad/tuple/control_dependency_1"
input: "gradients/Maximum_9_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_9_grad/Select_1"
op: "Select"
input: "gradients/Maximum_9_grad/GreaterEqual"
input: "gradients/Maximum_9_grad/zeros"
input: "gradients/add_9_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_9_grad/Sum"
op: "Sum"
input: "gradients/Maximum_9_grad/Select"
input: "gradients/Maximum_9_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_9_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_9_grad/Sum"
input: "gradients/Maximum_9_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_9_grad/Sum_1"
op: "Sum"
input: "gradients/Maximum_9_grad/Select_1"
input: "gradients/Maximum_9_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_9_grad/Reshape_1"
op: "Reshape"
input: "gradients/Maximum_9_grad/Sum_1"
input: "gradients/Maximum_9_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_9_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Maximum_9_grad/Reshape"
input: "^gradients/Maximum_9_grad/Reshape_1"
name: "gradients/Maximum_9_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Maximum_9_grad/Reshape"
input: "^gradients/Maximum_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_9_grad/Reshape"
    }
  }
}
name: "gradients/Maximum_9_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Maximum_9_grad/Reshape_1"
input: "^gradients/Maximum_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_9_grad/Reshape_1"
    }
  }
}
name: "gradients/Sum_10_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "gradients/Sum_10_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_10_grad/tuple/control_dependency"
input: "gradients/Sum_10_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Sum_10_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "gradients/Sum_10_grad/Tile"
op: "Tile"
input: "gradients/Sum_10_grad/Reshape"
input: "gradients/Sum_10_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/add_7_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_8_grad/tuple/control_dependency"
name: "gradients/add_7_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_8_grad/tuple/control_dependency"
input: "^gradients/add_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_7_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_8_grad/tuple/control_dependency"
input: "^gradients/add_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/Maximum_8_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_8_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_8_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_8_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Maximum_8_grad/zeros"
op: "Fill"
input: "gradients/Maximum_8_grad/Shape_2"
input: "gradients/Maximum_8_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_8_grad/GreaterEqual"
op: "GreaterEqual"
input: "Sum_8"
input: "Const_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_8_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Maximum_8_grad/Shape"
input: "gradients/Maximum_8_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_8_grad/Select"
op: "Select"
input: "gradients/Maximum_8_grad/GreaterEqual"
input: "gradients/add_8_grad/tuple/control_dependency_1"
input: "gradients/Maximum_8_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_8_grad/Select_1"
op: "Select"
input: "gradients/Maximum_8_grad/GreaterEqual"
input: "gradients/Maximum_8_grad/zeros"
input: "gradients/add_8_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_8_grad/Sum"
op: "Sum"
input: "gradients/Maximum_8_grad/Select"
input: "gradients/Maximum_8_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_8_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_8_grad/Sum"
input: "gradients/Maximum_8_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_8_grad/Sum_1"
op: "Sum"
input: "gradients/Maximum_8_grad/Select_1"
input: "gradients/Maximum_8_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_8_grad/Reshape_1"
op: "Reshape"
input: "gradients/Maximum_8_grad/Sum_1"
input: "gradients/Maximum_8_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_8_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Maximum_8_grad/Reshape"
input: "^gradients/Maximum_8_grad/Reshape_1"
name: "gradients/Maximum_8_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Maximum_8_grad/Reshape"
input: "^gradients/Maximum_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_8_grad/Reshape"
    }
  }
}
name: "gradients/Maximum_8_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Maximum_8_grad/Reshape_1"
input: "^gradients/Maximum_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_8_grad/Reshape_1"
    }
  }
}
name: "gradients/Sum_9_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "gradients/Sum_9_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_9_grad/tuple/control_dependency"
input: "gradients/Sum_9_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Sum_9_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "gradients/Sum_9_grad/Tile"
op: "Tile"
input: "gradients/Sum_9_grad/Reshape"
input: "gradients/Sum_9_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/Square_10_grad/Mul/y"
op: "Const"
input: "^gradients/Sum_10_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Square_10_grad/Mul"
op: "Mul"
input: "Sub_10"
input: "gradients/Square_10_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Square_10_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_10_grad/Tile"
input: "gradients/Square_10_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/add_6_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_7_grad/tuple/control_dependency"
name: "gradients/add_6_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_7_grad/tuple/control_dependency"
input: "^gradients/add_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_6_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_7_grad/tuple/control_dependency"
input: "^gradients/add_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/Maximum_7_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_7_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_7_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_7_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Maximum_7_grad/zeros"
op: "Fill"
input: "gradients/Maximum_7_grad/Shape_2"
input: "gradients/Maximum_7_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_7_grad/GreaterEqual"
op: "GreaterEqual"
input: "Sum_7"
input: "Const_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_7_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Maximum_7_grad/Shape"
input: "gradients/Maximum_7_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_7_grad/Select"
op: "Select"
input: "gradients/Maximum_7_grad/GreaterEqual"
input: "gradients/add_7_grad/tuple/control_dependency_1"
input: "gradients/Maximum_7_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_7_grad/Select_1"
op: "Select"
input: "gradients/Maximum_7_grad/GreaterEqual"
input: "gradients/Maximum_7_grad/zeros"
input: "gradients/add_7_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_7_grad/Sum"
op: "Sum"
input: "gradients/Maximum_7_grad/Select"
input: "gradients/Maximum_7_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_7_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_7_grad/Sum"
input: "gradients/Maximum_7_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_7_grad/Sum_1"
op: "Sum"
input: "gradients/Maximum_7_grad/Select_1"
input: "gradients/Maximum_7_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_7_grad/Reshape_1"
op: "Reshape"
input: "gradients/Maximum_7_grad/Sum_1"
input: "gradients/Maximum_7_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_7_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Maximum_7_grad/Reshape"
input: "^gradients/Maximum_7_grad/Reshape_1"
name: "gradients/Maximum_7_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Maximum_7_grad/Reshape"
input: "^gradients/Maximum_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_7_grad/Reshape"
    }
  }
}
name: "gradients/Maximum_7_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Maximum_7_grad/Reshape_1"
input: "^gradients/Maximum_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_7_grad/Reshape_1"
    }
  }
}
name: "gradients/Sum_8_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "gradients/Sum_8_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_8_grad/tuple/control_dependency"
input: "gradients/Sum_8_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Sum_8_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "gradients/Sum_8_grad/Tile"
op: "Tile"
input: "gradients/Sum_8_grad/Reshape"
input: "gradients/Sum_8_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/Square_9_grad/Mul/y"
op: "Const"
input: "^gradients/Sum_9_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Square_9_grad/Mul"
op: "Mul"
input: "Sub_9"
input: "gradients/Square_9_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Square_9_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_9_grad/Tile"
input: "gradients/Square_9_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_10_grad/Neg"
op: "Neg"
input: "gradients/Square_10_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_10_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_10_grad/Mul_1"
input: "^gradients/Sub_10_grad/Neg"
name: "gradients/Sub_10_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_10_grad/Mul_1"
input: "^gradients/Sub_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_10_grad/Mul_1"
    }
  }
}
name: "gradients/Sub_10_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_10_grad/Neg"
input: "^gradients/Sub_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_10_grad/Neg"
    }
  }
}
name: "gradients/add_5_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_6_grad/tuple/control_dependency"
name: "gradients/add_5_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_6_grad/tuple/control_dependency"
input: "^gradients/add_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_5_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_6_grad/tuple/control_dependency"
input: "^gradients/add_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/Maximum_6_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_6_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_6_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_6_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Maximum_6_grad/zeros"
op: "Fill"
input: "gradients/Maximum_6_grad/Shape_2"
input: "gradients/Maximum_6_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_6_grad/GreaterEqual"
op: "GreaterEqual"
input: "Sum_6"
input: "Const_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_6_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Maximum_6_grad/Shape"
input: "gradients/Maximum_6_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_6_grad/Select"
op: "Select"
input: "gradients/Maximum_6_grad/GreaterEqual"
input: "gradients/add_6_grad/tuple/control_dependency_1"
input: "gradients/Maximum_6_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_6_grad/Select_1"
op: "Select"
input: "gradients/Maximum_6_grad/GreaterEqual"
input: "gradients/Maximum_6_grad/zeros"
input: "gradients/add_6_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_6_grad/Sum"
op: "Sum"
input: "gradients/Maximum_6_grad/Select"
input: "gradients/Maximum_6_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_6_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_6_grad/Sum"
input: "gradients/Maximum_6_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_6_grad/Sum_1"
op: "Sum"
input: "gradients/Maximum_6_grad/Select_1"
input: "gradients/Maximum_6_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_6_grad/Reshape_1"
op: "Reshape"
input: "gradients/Maximum_6_grad/Sum_1"
input: "gradients/Maximum_6_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_6_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Maximum_6_grad/Reshape"
input: "^gradients/Maximum_6_grad/Reshape_1"
name: "gradients/Maximum_6_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Maximum_6_grad/Reshape"
input: "^gradients/Maximum_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_6_grad/Reshape"
    }
  }
}
name: "gradients/Maximum_6_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Maximum_6_grad/Reshape_1"
input: "^gradients/Maximum_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_6_grad/Reshape_1"
    }
  }
}
name: "gradients/Sum_7_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "gradients/Sum_7_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_7_grad/tuple/control_dependency"
input: "gradients/Sum_7_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Sum_7_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "gradients/Sum_7_grad/Tile"
op: "Tile"
input: "gradients/Sum_7_grad/Reshape"
input: "gradients/Sum_7_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/Square_8_grad/Mul/y"
op: "Const"
input: "^gradients/Sum_8_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Square_8_grad/Mul"
op: "Mul"
input: "Sub_8"
input: "gradients/Square_8_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Square_8_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_8_grad/Tile"
input: "gradients/Square_8_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_9_grad/Neg"
op: "Neg"
input: "gradients/Square_9_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_9_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_9_grad/Mul_1"
input: "^gradients/Sub_9_grad/Neg"
name: "gradients/Sub_9_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_9_grad/Mul_1"
input: "^gradients/Sub_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_9_grad/Mul_1"
    }
  }
}
name: "gradients/Sub_9_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_9_grad/Neg"
input: "^gradients/Sub_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_9_grad/Neg"
    }
  }
}
name: "gradients/strided_slice_20_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_20_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_20_grad/Shape"
input: "strided_slice_20/stack"
input: "strided_slice_20/stack_1"
input: "strided_slice_20/stack_2"
input: "gradients/Sub_10_grad/tuple/control_dependency"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_21_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_21_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_21_grad/Shape"
input: "strided_slice_21/stack"
input: "strided_slice_21/stack_1"
input: "strided_slice_21/stack_2"
input: "gradients/Sub_10_grad/tuple/control_dependency_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/add_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_5_grad/tuple/control_dependency"
name: "gradients/add_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_5_grad/tuple/control_dependency"
input: "^gradients/add_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_5_grad/tuple/control_dependency"
input: "^gradients/add_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/Maximum_5_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_5_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_5_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_5_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Maximum_5_grad/zeros"
op: "Fill"
input: "gradients/Maximum_5_grad/Shape_2"
input: "gradients/Maximum_5_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_5_grad/GreaterEqual"
op: "GreaterEqual"
input: "Sum_5"
input: "Const_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_5_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Maximum_5_grad/Shape"
input: "gradients/Maximum_5_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_5_grad/Select"
op: "Select"
input: "gradients/Maximum_5_grad/GreaterEqual"
input: "gradients/add_5_grad/tuple/control_dependency_1"
input: "gradients/Maximum_5_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_5_grad/Select_1"
op: "Select"
input: "gradients/Maximum_5_grad/GreaterEqual"
input: "gradients/Maximum_5_grad/zeros"
input: "gradients/add_5_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_5_grad/Sum"
op: "Sum"
input: "gradients/Maximum_5_grad/Select"
input: "gradients/Maximum_5_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_5_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_5_grad/Sum"
input: "gradients/Maximum_5_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_5_grad/Sum_1"
op: "Sum"
input: "gradients/Maximum_5_grad/Select_1"
input: "gradients/Maximum_5_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_5_grad/Reshape_1"
op: "Reshape"
input: "gradients/Maximum_5_grad/Sum_1"
input: "gradients/Maximum_5_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_5_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Maximum_5_grad/Reshape"
input: "^gradients/Maximum_5_grad/Reshape_1"
name: "gradients/Maximum_5_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Maximum_5_grad/Reshape"
input: "^gradients/Maximum_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_5_grad/Reshape"
    }
  }
}
name: "gradients/Maximum_5_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Maximum_5_grad/Reshape_1"
input: "^gradients/Maximum_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_5_grad/Reshape_1"
    }
  }
}
name: "gradients/Sum_6_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "gradients/Sum_6_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_6_grad/tuple/control_dependency"
input: "gradients/Sum_6_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Sum_6_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "gradients/Sum_6_grad/Tile"
op: "Tile"
input: "gradients/Sum_6_grad/Reshape"
input: "gradients/Sum_6_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/Square_7_grad/Mul/y"
op: "Const"
input: "^gradients/Sum_7_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Square_7_grad/Mul"
op: "Mul"
input: "Sub_7"
input: "gradients/Square_7_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Square_7_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_7_grad/Tile"
input: "gradients/Square_7_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_8_grad/Neg"
op: "Neg"
input: "gradients/Square_8_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_8_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_8_grad/Mul_1"
input: "^gradients/Sub_8_grad/Neg"
name: "gradients/Sub_8_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_8_grad/Mul_1"
input: "^gradients/Sub_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_8_grad/Mul_1"
    }
  }
}
name: "gradients/Sub_8_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_8_grad/Neg"
input: "^gradients/Sub_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_8_grad/Neg"
    }
  }
}
name: "gradients/strided_slice_18_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_18_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_18_grad/Shape"
input: "strided_slice_18/stack"
input: "strided_slice_18/stack_1"
input: "strided_slice_18/stack_2"
input: "gradients/Sub_9_grad/tuple/control_dependency"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_19_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_19_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_19_grad/Shape"
input: "strided_slice_19/stack"
input: "strided_slice_19/stack_1"
input: "strided_slice_19/stack_2"
input: "gradients/Sub_9_grad/tuple/control_dependency_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/add_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_4_grad/tuple/control_dependency"
name: "gradients/add_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_4_grad/tuple/control_dependency"
input: "^gradients/add_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_4_grad/tuple/control_dependency"
input: "^gradients/add_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/Maximum_4_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_4_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_4_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_4_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Maximum_4_grad/zeros"
op: "Fill"
input: "gradients/Maximum_4_grad/Shape_2"
input: "gradients/Maximum_4_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_4_grad/GreaterEqual"
op: "GreaterEqual"
input: "Sum_4"
input: "Const_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_4_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Maximum_4_grad/Shape"
input: "gradients/Maximum_4_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_4_grad/Select"
op: "Select"
input: "gradients/Maximum_4_grad/GreaterEqual"
input: "gradients/add_4_grad/tuple/control_dependency_1"
input: "gradients/Maximum_4_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_4_grad/Select_1"
op: "Select"
input: "gradients/Maximum_4_grad/GreaterEqual"
input: "gradients/Maximum_4_grad/zeros"
input: "gradients/add_4_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_4_grad/Sum"
op: "Sum"
input: "gradients/Maximum_4_grad/Select"
input: "gradients/Maximum_4_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_4_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_4_grad/Sum"
input: "gradients/Maximum_4_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_4_grad/Sum_1"
op: "Sum"
input: "gradients/Maximum_4_grad/Select_1"
input: "gradients/Maximum_4_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_4_grad/Reshape_1"
op: "Reshape"
input: "gradients/Maximum_4_grad/Sum_1"
input: "gradients/Maximum_4_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Maximum_4_grad/Reshape"
input: "^gradients/Maximum_4_grad/Reshape_1"
name: "gradients/Maximum_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Maximum_4_grad/Reshape"
input: "^gradients/Maximum_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_4_grad/Reshape"
    }
  }
}
name: "gradients/Maximum_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Maximum_4_grad/Reshape_1"
input: "^gradients/Maximum_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_4_grad/Reshape_1"
    }
  }
}
name: "gradients/Sum_5_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "gradients/Sum_5_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_5_grad/tuple/control_dependency"
input: "gradients/Sum_5_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Sum_5_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "gradients/Sum_5_grad/Tile"
op: "Tile"
input: "gradients/Sum_5_grad/Reshape"
input: "gradients/Sum_5_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/Square_6_grad/Mul/y"
op: "Const"
input: "^gradients/Sum_6_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Square_6_grad/Mul"
op: "Mul"
input: "Sub_6"
input: "gradients/Square_6_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Square_6_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_6_grad/Tile"
input: "gradients/Square_6_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_7_grad/Neg"
op: "Neg"
input: "gradients/Square_7_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_7_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_7_grad/Mul_1"
input: "^gradients/Sub_7_grad/Neg"
name: "gradients/Sub_7_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_7_grad/Mul_1"
input: "^gradients/Sub_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_7_grad/Mul_1"
    }
  }
}
name: "gradients/Sub_7_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_7_grad/Neg"
input: "^gradients/Sub_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_7_grad/Neg"
    }
  }
}
name: "gradients/strided_slice_16_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_16_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_16_grad/Shape"
input: "strided_slice_16/stack"
input: "strided_slice_16/stack_1"
input: "strided_slice_16/stack_2"
input: "gradients/Sub_8_grad/tuple/control_dependency"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_17_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_17_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_17_grad/Shape"
input: "strided_slice_17/stack"
input: "strided_slice_17/stack_1"
input: "strided_slice_17/stack_2"
input: "gradients/Sub_8_grad/tuple/control_dependency_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/add_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_3_grad/tuple/control_dependency"
name: "gradients/add_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_3_grad/tuple/control_dependency"
input: "^gradients/add_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_3_grad/tuple/control_dependency"
input: "^gradients/add_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/Maximum_3_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_3_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_3_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_3_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Maximum_3_grad/zeros"
op: "Fill"
input: "gradients/Maximum_3_grad/Shape_2"
input: "gradients/Maximum_3_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_3_grad/GreaterEqual"
op: "GreaterEqual"
input: "Sum_3"
input: "Const_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_3_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Maximum_3_grad/Shape"
input: "gradients/Maximum_3_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_3_grad/Select"
op: "Select"
input: "gradients/Maximum_3_grad/GreaterEqual"
input: "gradients/add_3_grad/tuple/control_dependency_1"
input: "gradients/Maximum_3_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_3_grad/Select_1"
op: "Select"
input: "gradients/Maximum_3_grad/GreaterEqual"
input: "gradients/Maximum_3_grad/zeros"
input: "gradients/add_3_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_3_grad/Sum"
op: "Sum"
input: "gradients/Maximum_3_grad/Select"
input: "gradients/Maximum_3_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_3_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_3_grad/Sum"
input: "gradients/Maximum_3_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_3_grad/Sum_1"
op: "Sum"
input: "gradients/Maximum_3_grad/Select_1"
input: "gradients/Maximum_3_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_3_grad/Reshape_1"
op: "Reshape"
input: "gradients/Maximum_3_grad/Sum_1"
input: "gradients/Maximum_3_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Maximum_3_grad/Reshape"
input: "^gradients/Maximum_3_grad/Reshape_1"
name: "gradients/Maximum_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Maximum_3_grad/Reshape"
input: "^gradients/Maximum_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_3_grad/Reshape"
    }
  }
}
name: "gradients/Maximum_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Maximum_3_grad/Reshape_1"
input: "^gradients/Maximum_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_3_grad/Reshape_1"
    }
  }
}
name: "gradients/Sum_4_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "gradients/Sum_4_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_4_grad/tuple/control_dependency"
input: "gradients/Sum_4_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Sum_4_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "gradients/Sum_4_grad/Tile"
op: "Tile"
input: "gradients/Sum_4_grad/Reshape"
input: "gradients/Sum_4_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/Square_5_grad/Mul/y"
op: "Const"
input: "^gradients/Sum_5_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Square_5_grad/Mul"
op: "Mul"
input: "Sub_5"
input: "gradients/Square_5_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Square_5_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_5_grad/Tile"
input: "gradients/Square_5_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_6_grad/Neg"
op: "Neg"
input: "gradients/Square_6_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_6_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_6_grad/Mul_1"
input: "^gradients/Sub_6_grad/Neg"
name: "gradients/Sub_6_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_6_grad/Mul_1"
input: "^gradients/Sub_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_6_grad/Mul_1"
    }
  }
}
name: "gradients/Sub_6_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_6_grad/Neg"
input: "^gradients/Sub_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_6_grad/Neg"
    }
  }
}
name: "gradients/strided_slice_14_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_14_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_14_grad/Shape"
input: "strided_slice_14/stack"
input: "strided_slice_14/stack_1"
input: "strided_slice_14/stack_2"
input: "gradients/Sub_7_grad/tuple/control_dependency"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_15_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_15_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_15_grad/Shape"
input: "strided_slice_15/stack"
input: "strided_slice_15/stack_1"
input: "strided_slice_15/stack_2"
input: "gradients/Sub_7_grad/tuple/control_dependency_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/add_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_2_grad/tuple/control_dependency"
name: "gradients/add_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_2_grad/tuple/control_dependency"
input: "^gradients/add_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_2_grad/tuple/control_dependency"
input: "^gradients/add_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/Maximum_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_2_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_2_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_2_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Maximum_2_grad/zeros"
op: "Fill"
input: "gradients/Maximum_2_grad/Shape_2"
input: "gradients/Maximum_2_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_2_grad/GreaterEqual"
op: "GreaterEqual"
input: "Sum_2"
input: "Const_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_2_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Maximum_2_grad/Shape"
input: "gradients/Maximum_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_2_grad/Select"
op: "Select"
input: "gradients/Maximum_2_grad/GreaterEqual"
input: "gradients/add_2_grad/tuple/control_dependency_1"
input: "gradients/Maximum_2_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_2_grad/Select_1"
op: "Select"
input: "gradients/Maximum_2_grad/GreaterEqual"
input: "gradients/Maximum_2_grad/zeros"
input: "gradients/add_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_2_grad/Sum"
op: "Sum"
input: "gradients/Maximum_2_grad/Select"
input: "gradients/Maximum_2_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_2_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_2_grad/Sum"
input: "gradients/Maximum_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_2_grad/Sum_1"
op: "Sum"
input: "gradients/Maximum_2_grad/Select_1"
input: "gradients/Maximum_2_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_2_grad/Reshape_1"
op: "Reshape"
input: "gradients/Maximum_2_grad/Sum_1"
input: "gradients/Maximum_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Maximum_2_grad/Reshape"
input: "^gradients/Maximum_2_grad/Reshape_1"
name: "gradients/Maximum_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Maximum_2_grad/Reshape"
input: "^gradients/Maximum_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_2_grad/Reshape"
    }
  }
}
name: "gradients/Maximum_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Maximum_2_grad/Reshape_1"
input: "^gradients/Maximum_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_2_grad/Reshape_1"
    }
  }
}
name: "gradients/Sum_3_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "gradients/Sum_3_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_3_grad/tuple/control_dependency"
input: "gradients/Sum_3_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Sum_3_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "gradients/Sum_3_grad/Tile"
op: "Tile"
input: "gradients/Sum_3_grad/Reshape"
input: "gradients/Sum_3_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/Square_4_grad/Mul/y"
op: "Const"
input: "^gradients/Sum_4_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Square_4_grad/Mul"
op: "Mul"
input: "Sub_4"
input: "gradients/Square_4_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Square_4_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_4_grad/Tile"
input: "gradients/Square_4_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_5_grad/Neg"
op: "Neg"
input: "gradients/Square_5_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_5_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_5_grad/Mul_1"
input: "^gradients/Sub_5_grad/Neg"
name: "gradients/Sub_5_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_5_grad/Mul_1"
input: "^gradients/Sub_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_5_grad/Mul_1"
    }
  }
}
name: "gradients/Sub_5_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_5_grad/Neg"
input: "^gradients/Sub_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_5_grad/Neg"
    }
  }
}
name: "gradients/strided_slice_12_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_12_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_12_grad/Shape"
input: "strided_slice_12/stack"
input: "strided_slice_12/stack_1"
input: "strided_slice_12/stack_2"
input: "gradients/Sub_6_grad/tuple/control_dependency"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_13_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_13_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_13_grad/Shape"
input: "strided_slice_13/stack"
input: "strided_slice_13/stack_1"
input: "strided_slice_13/stack_2"
input: "gradients/Sub_6_grad/tuple/control_dependency_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_1_grad/tuple/control_dependency"
name: "gradients/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_1_grad/tuple/control_dependency"
input: "^gradients/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_1_grad/tuple/control_dependency"
input: "^gradients/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
name: "gradients/Maximum_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_1_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_1_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_1_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Maximum_1_grad/zeros"
op: "Fill"
input: "gradients/Maximum_1_grad/Shape_2"
input: "gradients/Maximum_1_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_1_grad/GreaterEqual"
op: "GreaterEqual"
input: "Sum_1"
input: "Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Maximum_1_grad/Shape"
input: "gradients/Maximum_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_1_grad/Select"
op: "Select"
input: "gradients/Maximum_1_grad/GreaterEqual"
input: "gradients/add_1_grad/tuple/control_dependency_1"
input: "gradients/Maximum_1_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_1_grad/Select_1"
op: "Select"
input: "gradients/Maximum_1_grad/GreaterEqual"
input: "gradients/Maximum_1_grad/zeros"
input: "gradients/add_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_1_grad/Sum"
op: "Sum"
input: "gradients/Maximum_1_grad/Select"
input: "gradients/Maximum_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_1_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_1_grad/Sum"
input: "gradients/Maximum_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_1_grad/Sum_1"
op: "Sum"
input: "gradients/Maximum_1_grad/Select_1"
input: "gradients/Maximum_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/Maximum_1_grad/Sum_1"
input: "gradients/Maximum_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Maximum_1_grad/Reshape"
input: "^gradients/Maximum_1_grad/Reshape_1"
name: "gradients/Maximum_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Maximum_1_grad/Reshape"
input: "^gradients/Maximum_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_1_grad/Reshape"
    }
  }
}
name: "gradients/Maximum_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Maximum_1_grad/Reshape_1"
input: "^gradients/Maximum_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_1_grad/Reshape_1"
    }
  }
}
name: "gradients/Sum_2_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "gradients/Sum_2_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_2_grad/tuple/control_dependency"
input: "gradients/Sum_2_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Sum_2_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "gradients/Sum_2_grad/Tile"
op: "Tile"
input: "gradients/Sum_2_grad/Reshape"
input: "gradients/Sum_2_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/Square_3_grad/Mul/y"
op: "Const"
input: "^gradients/Sum_3_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Square_3_grad/Mul"
op: "Mul"
input: "Sub_3"
input: "gradients/Square_3_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Square_3_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_3_grad/Tile"
input: "gradients/Square_3_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_4_grad/Neg"
op: "Neg"
input: "gradients/Square_4_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_4_grad/Mul_1"
input: "^gradients/Sub_4_grad/Neg"
name: "gradients/Sub_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_4_grad/Mul_1"
input: "^gradients/Sub_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_4_grad/Mul_1"
    }
  }
}
name: "gradients/Sub_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_4_grad/Neg"
input: "^gradients/Sub_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_4_grad/Neg"
    }
  }
}
name: "gradients/strided_slice_10_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_10_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_10_grad/Shape"
input: "strided_slice_10/stack"
input: "strided_slice_10/stack_1"
input: "strided_slice_10/stack_2"
input: "gradients/Sub_5_grad/tuple/control_dependency"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_11_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_11_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_11_grad/Shape"
input: "strided_slice_11/stack"
input: "strided_slice_11/stack_1"
input: "strided_slice_11/stack_2"
input: "gradients/Sub_5_grad/tuple/control_dependency_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/Maximum_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Maximum_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Maximum_grad/zeros"
op: "Fill"
input: "gradients/Maximum_grad/Shape_2"
input: "gradients/Maximum_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_grad/GreaterEqual"
op: "GreaterEqual"
input: "Sum"
input: "Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Maximum_grad/Shape"
input: "gradients/Maximum_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_grad/Select"
op: "Select"
input: "gradients/Maximum_grad/GreaterEqual"
input: "gradients/add_grad/tuple/control_dependency_1"
input: "gradients/Maximum_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_grad/Select_1"
op: "Select"
input: "gradients/Maximum_grad/GreaterEqual"
input: "gradients/Maximum_grad/zeros"
input: "gradients/add_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Maximum_grad/Sum"
op: "Sum"
input: "gradients/Maximum_grad/Select"
input: "gradients/Maximum_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_grad/Sum"
input: "gradients/Maximum_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_grad/Sum_1"
op: "Sum"
input: "gradients/Maximum_grad/Select_1"
input: "gradients/Maximum_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Maximum_grad/Reshape_1"
op: "Reshape"
input: "gradients/Maximum_grad/Sum_1"
input: "gradients/Maximum_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Maximum_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Maximum_grad/Reshape"
input: "^gradients/Maximum_grad/Reshape_1"
name: "gradients/Maximum_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Maximum_grad/Reshape"
input: "^gradients/Maximum_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_grad/Reshape"
    }
  }
}
name: "gradients/Maximum_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Maximum_grad/Reshape_1"
input: "^gradients/Maximum_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Maximum_grad/Reshape_1"
    }
  }
}
name: "gradients/Sum_1_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "gradients/Sum_1_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_1_grad/tuple/control_dependency"
input: "gradients/Sum_1_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Sum_1_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "gradients/Sum_1_grad/Tile"
op: "Tile"
input: "gradients/Sum_1_grad/Reshape"
input: "gradients/Sum_1_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/Square_2_grad/Mul/y"
op: "Const"
input: "^gradients/Sum_2_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Square_2_grad/Mul"
op: "Mul"
input: "Sub_2"
input: "gradients/Square_2_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Square_2_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_2_grad/Tile"
input: "gradients/Square_2_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_3_grad/Neg"
op: "Neg"
input: "gradients/Square_3_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_3_grad/Mul_1"
input: "^gradients/Sub_3_grad/Neg"
name: "gradients/Sub_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_3_grad/Mul_1"
input: "^gradients/Sub_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_3_grad/Mul_1"
    }
  }
}
name: "gradients/Sub_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_3_grad/Neg"
input: "^gradients/Sub_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_3_grad/Neg"
    }
  }
}
name: "gradients/strided_slice_8_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_8_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_8_grad/Shape"
input: "strided_slice_8/stack"
input: "strided_slice_8/stack_1"
input: "strided_slice_8/stack_2"
input: "gradients/Sub_4_grad/tuple/control_dependency"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_9_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_9_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_9_grad/Shape"
input: "strided_slice_9/stack"
input: "strided_slice_9/stack_1"
input: "strided_slice_9/stack_2"
input: "gradients/Sub_4_grad/tuple/control_dependency_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/Sum_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
name: "gradients/Sum_grad/Reshape"
op: "Reshape"
input: "gradients/Maximum_grad/tuple/control_dependency"
input: "gradients/Sum_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Sum_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "gradients/Sum_grad/Tile"
op: "Tile"
input: "gradients/Sum_grad/Reshape"
input: "gradients/Sum_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/Square_1_grad/Mul/y"
op: "Const"
input: "^gradients/Sum_1_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Square_1_grad/Mul"
op: "Mul"
input: "Sub_1"
input: "gradients/Square_1_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Square_1_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_1_grad/Tile"
input: "gradients/Square_1_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_2_grad/Neg"
op: "Neg"
input: "gradients/Square_2_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_2_grad/Mul_1"
input: "^gradients/Sub_2_grad/Neg"
name: "gradients/Sub_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_2_grad/Mul_1"
input: "^gradients/Sub_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_2_grad/Mul_1"
    }
  }
}
name: "gradients/Sub_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_2_grad/Neg"
input: "^gradients/Sub_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_2_grad/Neg"
    }
  }
}
name: "gradients/strided_slice_6_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_6_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_6_grad/Shape"
input: "strided_slice_6/stack"
input: "strided_slice_6/stack_1"
input: "strided_slice_6/stack_2"
input: "gradients/Sub_3_grad/tuple/control_dependency"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_7_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_7_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_7_grad/Shape"
input: "strided_slice_7/stack"
input: "strided_slice_7/stack_1"
input: "strided_slice_7/stack_2"
input: "gradients/Sub_3_grad/tuple/control_dependency_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/Square_grad/Mul/y"
op: "Const"
input: "^gradients/Sum_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Square_grad/Mul"
op: "Mul"
input: "Sub"
input: "gradients/Square_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Square_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_grad/Tile"
input: "gradients/Square_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_1_grad/Neg"
op: "Neg"
input: "gradients/Square_1_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_1_grad/Mul_1"
input: "^gradients/Sub_1_grad/Neg"
name: "gradients/Sub_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_1_grad/Mul_1"
input: "^gradients/Sub_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_1_grad/Mul_1"
    }
  }
}
name: "gradients/Sub_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_1_grad/Neg"
input: "^gradients/Sub_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_1_grad/Neg"
    }
  }
}
name: "gradients/strided_slice_4_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_4_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_4_grad/Shape"
input: "strided_slice_4/stack"
input: "strided_slice_4/stack_1"
input: "strided_slice_4/stack_2"
input: "gradients/Sub_2_grad/tuple/control_dependency"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_5_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_5_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_5_grad/Shape"
input: "strided_slice_5/stack"
input: "strided_slice_5/stack_1"
input: "strided_slice_5/stack_2"
input: "gradients/Sub_2_grad/tuple/control_dependency_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/Sub_grad/Neg"
op: "Neg"
input: "gradients/Square_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Sub_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_grad/Mul_1"
input: "^gradients/Sub_grad/Neg"
name: "gradients/Sub_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_grad/Mul_1"
input: "^gradients/Sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_grad/Mul_1"
    }
  }
}
name: "gradients/Sub_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_grad/Neg"
input: "^gradients/Sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_grad/Neg"
    }
  }
}
name: "gradients/strided_slice_2_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_2_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_2_grad/Shape"
input: "strided_slice_2/stack"
input: "strided_slice_2/stack_1"
input: "strided_slice_2/stack_2"
input: "gradients/Sub_1_grad/tuple/control_dependency"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_3_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_3_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_3_grad/Shape"
input: "strided_slice_3/stack"
input: "strided_slice_3/stack_1"
input: "strided_slice_3/stack_2"
input: "gradients/Sub_1_grad/tuple/control_dependency_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_grad/Shape"
input: "strided_slice/stack"
input: "strided_slice/stack_1"
input: "strided_slice/stack_2"
input: "gradients/Sub_grad/tuple/control_dependency"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/strided_slice_1_grad/Shape"
op: "Shape"
input: "Embeddings"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/strided_slice_1_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_1_grad/Shape"
input: "strided_slice_1/stack"
input: "strided_slice_1/stack_1"
input: "strided_slice_1/stack_2"
input: "gradients/Sub_grad/tuple/control_dependency_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
name: "gradients/AddN"
op: "AddN"
input: "gradients/strided_slice_20_grad/StridedSliceGrad"
input: "gradients/strided_slice_21_grad/StridedSliceGrad"
input: "gradients/strided_slice_18_grad/StridedSliceGrad"
input: "gradients/strided_slice_19_grad/StridedSliceGrad"
input: "gradients/strided_slice_16_grad/StridedSliceGrad"
input: "gradients/strided_slice_17_grad/StridedSliceGrad"
input: "gradients/strided_slice_14_grad/StridedSliceGrad"
input: "gradients/strided_slice_15_grad/StridedSliceGrad"
input: "gradients/strided_slice_12_grad/StridedSliceGrad"
input: "gradients/strided_slice_13_grad/StridedSliceGrad"
input: "gradients/strided_slice_10_grad/StridedSliceGrad"
input: "gradients/strided_slice_11_grad/StridedSliceGrad"
input: "gradients/strided_slice_8_grad/StridedSliceGrad"
input: "gradients/strided_slice_9_grad/StridedSliceGrad"
input: "gradients/strided_slice_6_grad/StridedSliceGrad"
input: "gradients/strided_slice_7_grad/StridedSliceGrad"
input: "gradients/strided_slice_4_grad/StridedSliceGrad"
input: "gradients/strided_slice_5_grad/StridedSliceGrad"
input: "gradients/strided_slice_2_grad/StridedSliceGrad"
input: "gradients/strided_slice_3_grad/StridedSliceGrad"
input: "gradients/strided_slice_grad/StridedSliceGrad"
input: "gradients/strided_slice_1_grad/StridedSliceGrad"
attr {
  key: "N"
  value {
    i: 22
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/strided_slice_20_grad/StridedSliceGrad"
    }
  }
}
name: "gradients/Embeddings_grad/Shape"
op: "Shape"
input: "Encoding_layer/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\200\000\000\000"
    }
  }
}
name: "gradients/Embeddings_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Embeddings_grad/Shape"
input: "gradients/Embeddings_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings_grad/mul"
op: "Mul"
input: "gradients/AddN"
input: "Embeddings/Rsqrt"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Embeddings_grad/Sum"
op: "Sum"
input: "gradients/Embeddings_grad/mul"
input: "gradients/Embeddings_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Embeddings_grad/Reshape"
op: "Reshape"
input: "gradients/Embeddings_grad/Sum"
input: "gradients/Embeddings_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings_grad/mul_1"
op: "Mul"
input: "Encoding_layer/BiasAdd"
input: "gradients/AddN"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Embeddings_grad/Sum_1"
op: "Sum"
input: "gradients/Embeddings_grad/mul_1"
input: "gradients/Embeddings_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Embeddings_grad/Reshape_1"
op: "Reshape"
input: "gradients/Embeddings_grad/Sum_1"
input: "gradients/Embeddings_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Embeddings_grad/Reshape"
input: "^gradients/Embeddings_grad/Reshape_1"
name: "gradients/Embeddings_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Embeddings_grad/Reshape"
input: "^gradients/Embeddings_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings_grad/Reshape"
    }
  }
}
name: "gradients/Embeddings_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Embeddings_grad/Reshape_1"
input: "^gradients/Embeddings_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings_grad/Reshape_1"
    }
  }
}
name: "gradients/Embeddings/Rsqrt_grad/RsqrtGrad"
op: "RsqrtGrad"
input: "Embeddings/Rsqrt"
input: "gradients/Embeddings_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Embeddings/Maximum_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\200\000\000\000"
    }
  }
}
name: "gradients/Embeddings/Maximum_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Embeddings/Maximum_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\200\000\000\000"
    }
  }
}
name: "gradients/Embeddings/Maximum_grad/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "gradients/Embeddings/Maximum_grad/zeros"
op: "Fill"
input: "gradients/Embeddings/Maximum_grad/Shape_2"
input: "gradients/Embeddings/Maximum_grad/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings/Maximum_grad/GreaterEqual"
op: "GreaterEqual"
input: "Embeddings/Sum"
input: "Embeddings/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Embeddings/Maximum_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Embeddings/Maximum_grad/Shape"
input: "gradients/Embeddings/Maximum_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings/Maximum_grad/Select"
op: "Select"
input: "gradients/Embeddings/Maximum_grad/GreaterEqual"
input: "gradients/Embeddings/Rsqrt_grad/RsqrtGrad"
input: "gradients/Embeddings/Maximum_grad/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Embeddings/Maximum_grad/Select_1"
op: "Select"
input: "gradients/Embeddings/Maximum_grad/GreaterEqual"
input: "gradients/Embeddings/Maximum_grad/zeros"
input: "gradients/Embeddings/Rsqrt_grad/RsqrtGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Embeddings/Maximum_grad/Sum"
op: "Sum"
input: "gradients/Embeddings/Maximum_grad/Select"
input: "gradients/Embeddings/Maximum_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Embeddings/Maximum_grad/Reshape"
op: "Reshape"
input: "gradients/Embeddings/Maximum_grad/Sum"
input: "gradients/Embeddings/Maximum_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings/Maximum_grad/Sum_1"
op: "Sum"
input: "gradients/Embeddings/Maximum_grad/Select_1"
input: "gradients/Embeddings/Maximum_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Embeddings/Maximum_grad/Reshape_1"
op: "Reshape"
input: "gradients/Embeddings/Maximum_grad/Sum_1"
input: "gradients/Embeddings/Maximum_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings/Maximum_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Embeddings/Maximum_grad/Reshape"
input: "^gradients/Embeddings/Maximum_grad/Reshape_1"
name: "gradients/Embeddings/Maximum_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Embeddings/Maximum_grad/Reshape"
input: "^gradients/Embeddings/Maximum_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Maximum_grad/Reshape"
    }
  }
}
name: "gradients/Embeddings/Maximum_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Embeddings/Maximum_grad/Reshape_1"
input: "^gradients/Embeddings/Maximum_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Maximum_grad/Reshape_1"
    }
  }
}
name: "gradients/Embeddings/Sum_grad/Shape"
op: "Shape"
input: "Embeddings/Square"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings/Sum_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
name: "gradients/Embeddings/Sum_grad/add"
op: "Add"
input: "Embeddings/Sum/reduction_indices"
input: "gradients/Embeddings/Sum_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
name: "gradients/Embeddings/Sum_grad/mod"
op: "FloorMod"
input: "gradients/Embeddings/Sum_grad/add"
input: "gradients/Embeddings/Sum_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
name: "gradients/Embeddings/Sum_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/Embeddings/Sum_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
name: "gradients/Embeddings/Sum_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
name: "gradients/Embeddings/Sum_grad/range"
op: "Range"
input: "gradients/Embeddings/Sum_grad/range/start"
input: "gradients/Embeddings/Sum_grad/Size"
input: "gradients/Embeddings/Sum_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
name: "gradients/Embeddings/Sum_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
name: "gradients/Embeddings/Sum_grad/Fill"
op: "Fill"
input: "gradients/Embeddings/Sum_grad/Shape_1"
input: "gradients/Embeddings/Sum_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings/Sum_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Embeddings/Sum_grad/range"
input: "gradients/Embeddings/Sum_grad/mod"
input: "gradients/Embeddings/Sum_grad/Shape"
input: "gradients/Embeddings/Sum_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
name: "gradients/Embeddings/Sum_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
name: "gradients/Embeddings/Sum_grad/Maximum"
op: "Maximum"
input: "gradients/Embeddings/Sum_grad/DynamicStitch"
input: "gradients/Embeddings/Sum_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
name: "gradients/Embeddings/Sum_grad/floordiv"
op: "FloorDiv"
input: "gradients/Embeddings/Sum_grad/Shape"
input: "gradients/Embeddings/Sum_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings/Sum_grad/Shape"
    }
  }
}
name: "gradients/Embeddings/Sum_grad/Reshape"
op: "Reshape"
input: "gradients/Embeddings/Maximum_grad/tuple/control_dependency"
input: "gradients/Embeddings/Sum_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings/Sum_grad/Tile"
op: "Tile"
input: "gradients/Embeddings/Sum_grad/Reshape"
input: "gradients/Embeddings/Sum_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/Embeddings/Square_grad/Mul/y"
op: "Const"
input: "^gradients/Embeddings/Sum_grad/Tile"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
name: "gradients/Embeddings/Square_grad/Mul"
op: "Mul"
input: "Encoding_layer/BiasAdd"
input: "gradients/Embeddings/Square_grad/Mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Embeddings/Square_grad/Mul_1"
op: "Mul"
input: "gradients/Embeddings/Sum_grad/Tile"
input: "gradients/Embeddings/Square_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/AddN_1"
op: "AddN"
input: "gradients/Embeddings_grad/tuple/control_dependency"
input: "gradients/Embeddings/Square_grad/Mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings_grad/Reshape"
    }
  }
}
name: "gradients/Encoding_layer/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/AddN_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
name: "gradients/Encoding_layer/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/AddN_1"
input: "^gradients/Encoding_layer/BiasAdd_grad/BiasAddGrad"
name: "gradients/Encoding_layer/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/AddN_1"
input: "^gradients/Encoding_layer/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Embeddings_grad/Reshape"
    }
  }
}
name: "gradients/Encoding_layer/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Encoding_layer/BiasAdd_grad/BiasAddGrad"
input: "^gradients/Encoding_layer/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Encoding_layer/BiasAdd_grad/BiasAddGrad"
    }
  }
}
name: "gradients/Encoding_layer/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/Encoding_layer/BiasAdd_grad/tuple/control_dependency"
input: "Encoding_layer/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
name: "gradients/Encoding_layer/MatMul_grad/MatMul_1"
op: "MatMul"
input: "MobilenetV2/Logits/output"
input: "gradients/Encoding_layer/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
name: "gradients/Encoding_layer/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Encoding_layer/MatMul_grad/MatMul"
input: "^gradients/Encoding_layer/MatMul_grad/MatMul_1"
name: "gradients/Encoding_layer/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Encoding_layer/MatMul_grad/MatMul"
input: "^gradients/Encoding_layer/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Encoding_layer/MatMul_grad/MatMul"
    }
  }
}
name: "gradients/Encoding_layer/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Encoding_layer/MatMul_grad/MatMul_1"
input: "^gradients/Encoding_layer/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Encoding_layer/MatMul_grad/MatMul_1"
    }
  }
}
name: "gradients/MobilenetV2/Logits/Squeeze_grad/Shape"
op: "Shape"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/Encoding_layer/MatMul_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/Logits/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/MobilenetV2/Logits/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/Logits/Squeeze_grad/Reshape"
input: "^gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/BiasAddGrad"
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/Logits/Squeeze_grad/Reshape"
input: "^gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Logits/Squeeze_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/BiasAddGrad"
    }
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/Logits/Dropout/dropout/mul"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\000\005\000\000\351\003\000\000"
    }
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/ShapeN"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/read"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/Logits/Dropout/dropout/mul"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/Const"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "MobilenetV2/Logits/Dropout/dropout/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "MobilenetV2/Logits/Dropout/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Shape"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/mul"
op: "Mul"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/Logits/Dropout/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/mul"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Sum"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/mul_1"
op: "Mul"
input: "MobilenetV2/Logits/Dropout/dropout/div"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/mul_1"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Reshape_1"
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN_2"
op: "AddN"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Logits/Conv2d_1c_1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Shape"
op: "Shape"
input: "MobilenetV2/Logits/AvgPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Shape"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "MobilenetV2/Logits/Dropout/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Sum"
op: "Sum"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/RealDiv"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Sum"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Neg"
op: "Neg"
input: "MobilenetV2/Logits/AvgPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Neg"
input: "MobilenetV2/Logits/Dropout/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/RealDiv_1"
input: "MobilenetV2/Logits/Dropout/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/mul"
op: "Mul"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Sum_1"
op: "Sum"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/mul"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Sum_1"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Reshape"
input: "^gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Reshape_1"
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Reshape"
input: "^gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Reshape_1"
input: "^gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/Reshape_1"
    }
  }
}
name: "gradients/MobilenetV2/Logits/AvgPool_grad/Shape"
op: "Shape"
input: "MobilenetV2/embedding"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Logits/AvgPool_grad/AvgPoolGrad"
op: "AvgPoolGrad"
input: "gradients/MobilenetV2/Logits/AvgPool_grad/Shape"
input: "gradients/MobilenetV2/Logits/Dropout/dropout/div_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 7
      i: 7
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/Conv_1/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/Logits/AvgPool_grad/AvgPoolGrad"
input: "MobilenetV2/Conv_1/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like"
op: "ZerosLike"
input: "MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_1"
op: "ZerosLike"
input: "MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_2"
op: "ZerosLike"
input: "MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_3"
op: "ZerosLike"
input: "MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/Conv_1/Relu6_grad/Relu6Grad"
input: "MobilenetV2/Conv_1/Conv2D"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/read"
input: "MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_16/output"
input: "MobilenetV2/Conv_1/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Conv_1/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
    }
  }
}
name: "gradients/MobilenetV2/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/Conv_1/Conv2D_grad/ShapeN"
input: "MobilenetV2/Conv_1/weights/read"
input: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_16/output"
input: "gradients/MobilenetV2/Conv_1/Conv2D_grad/Const"
input: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_3"
op: "AddN"
input: "gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/zeros_like_4"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_5"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_6"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_7"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_16/project/Conv2D"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_16/depthwise_output"
input: "MobilenetV2/expanded_conv_16/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_16/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_16/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_4"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_16/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_16/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_8"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_9"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_10"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_11"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_16/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_16/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_16/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_12"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_13"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_14"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_15"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_16/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_16/expand/Conv2D"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_16/input"
input: "MobilenetV2/expanded_conv_16/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_16/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_16/input"
input: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_5"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/add_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_15/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/add_grad/Shape_1"
op: "Shape"
input: "MobilenetV2/expanded_conv_15/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/Shape"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/add_grad/Sum"
op: "Sum"
input: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/add_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/Sum"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/add_grad/Sum_1"
op: "Sum"
input: "gradients/MobilenetV2/expanded_conv_16/expand/Conv2D_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/add_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/Sum_1"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_15/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_15/add_grad/Reshape_1"
name: "gradients/MobilenetV2/expanded_conv_15/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_15/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/add_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/Reshape_1"
input: "^gradients/MobilenetV2/expanded_conv_15/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/add_grad/Reshape_1"
    }
  }
}
name: "gradients/zeros_like_16"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_17"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_18"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_19"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_15/project/Conv2D"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_15/depthwise_output"
input: "MobilenetV2/expanded_conv_15/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_15/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_15/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_6"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_15/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_15/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_20"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_21"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_22"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_23"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_15/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_15/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_15/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_24"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_25"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_26"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_27"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_15/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_15/expand/Conv2D"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_15/input"
input: "MobilenetV2/expanded_conv_15/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_15/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_15/input"
input: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_7"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_15/add_grad/tuple/control_dependency_1"
input: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/add_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN_8"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_15/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/add_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_14/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/add_grad/Shape_1"
op: "Shape"
input: "MobilenetV2/expanded_conv_14/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/Shape"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/add_grad/Sum"
op: "Sum"
input: "gradients/AddN_7"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/add_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/Sum"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/add_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_7"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/add_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/Sum_1"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_14/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_14/add_grad/Reshape_1"
name: "gradients/MobilenetV2/expanded_conv_14/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_14/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/add_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/Reshape_1"
input: "^gradients/MobilenetV2/expanded_conv_14/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/add_grad/Reshape_1"
    }
  }
}
name: "gradients/zeros_like_28"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_29"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_30"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_31"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_14/project/Conv2D"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_14/depthwise_output"
input: "MobilenetV2/expanded_conv_14/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_14/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_14/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_9"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_14/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_14/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_32"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_33"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_34"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_35"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_14/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_14/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_14/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_36"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_37"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_38"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_39"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_14/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_14/expand/Conv2D"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_14/input"
input: "MobilenetV2/expanded_conv_14/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_14/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_14/input"
input: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_10"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_14/add_grad/tuple/control_dependency_1"
input: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/add_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN_11"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_14/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/zeros_like_40"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_41"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_42"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_43"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/AddN_10"
input: "MobilenetV2/expanded_conv_13/project/Conv2D"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_13/depthwise_output"
input: "MobilenetV2/expanded_conv_13/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_13/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_13/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_12"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_13/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_13/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_44"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_45"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_46"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_47"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_13/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_13/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_13/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_48"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_49"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_50"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_51"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_13/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_13/expand/Conv2D"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_13/input"
input: "MobilenetV2/expanded_conv_13/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_13/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_13/input"
input: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_13"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/add_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_12/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/add_grad/Shape_1"
op: "Shape"
input: "MobilenetV2/expanded_conv_12/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/Shape"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/add_grad/Sum"
op: "Sum"
input: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/add_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/Sum"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/add_grad/Sum_1"
op: "Sum"
input: "gradients/MobilenetV2/expanded_conv_13/expand/Conv2D_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/add_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/Sum_1"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_12/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_12/add_grad/Reshape_1"
name: "gradients/MobilenetV2/expanded_conv_12/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_12/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/add_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/Reshape_1"
input: "^gradients/MobilenetV2/expanded_conv_12/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/add_grad/Reshape_1"
    }
  }
}
name: "gradients/zeros_like_52"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_53"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_54"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_55"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_12/project/Conv2D"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_12/depthwise_output"
input: "MobilenetV2/expanded_conv_12/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_12/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_12/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_14"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_12/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_12/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_56"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_57"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_58"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_59"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_12/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_12/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_12/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_60"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_61"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_62"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_63"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_12/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_12/expand/Conv2D"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_12/input"
input: "MobilenetV2/expanded_conv_12/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_12/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_12/input"
input: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_15"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_12/add_grad/tuple/control_dependency_1"
input: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/add_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN_16"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_12/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/add_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_11/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/add_grad/Shape_1"
op: "Shape"
input: "MobilenetV2/expanded_conv_11/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/Shape"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/add_grad/Sum"
op: "Sum"
input: "gradients/AddN_15"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/add_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/Sum"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/add_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_15"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/add_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/Sum_1"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_11/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_11/add_grad/Reshape_1"
name: "gradients/MobilenetV2/expanded_conv_11/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_11/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/add_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/Reshape_1"
input: "^gradients/MobilenetV2/expanded_conv_11/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/add_grad/Reshape_1"
    }
  }
}
name: "gradients/zeros_like_64"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_65"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_66"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_67"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_11/project/Conv2D"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_11/depthwise_output"
input: "MobilenetV2/expanded_conv_11/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_11/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_11/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_17"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_11/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_11/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_68"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_69"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_70"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_71"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_11/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_11/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_11/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_72"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_73"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_74"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_75"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_11/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_11/expand/Conv2D"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_11/input"
input: "MobilenetV2/expanded_conv_11/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_11/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_11/input"
input: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_18"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_11/add_grad/tuple/control_dependency_1"
input: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/add_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN_19"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_11/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/zeros_like_76"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_77"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_78"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_79"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/AddN_18"
input: "MobilenetV2/expanded_conv_10/project/Conv2D"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_10/depthwise_output"
input: "MobilenetV2/expanded_conv_10/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_10/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_10/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_20"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_10/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_10/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_80"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_81"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_82"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_83"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_10/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_10/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_10/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_84"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_85"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_86"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_87"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_10/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_10/expand/Conv2D"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_10/input"
input: "MobilenetV2/expanded_conv_10/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_10/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_10/input"
input: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_21"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/add_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_9/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/add_grad/Shape_1"
op: "Shape"
input: "MobilenetV2/expanded_conv_9/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/Shape"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/add_grad/Sum"
op: "Sum"
input: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/add_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/Sum"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/add_grad/Sum_1"
op: "Sum"
input: "gradients/MobilenetV2/expanded_conv_10/expand/Conv2D_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/add_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/Sum_1"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_9/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_9/add_grad/Reshape_1"
name: "gradients/MobilenetV2/expanded_conv_9/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_9/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/add_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/Reshape_1"
input: "^gradients/MobilenetV2/expanded_conv_9/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/add_grad/Reshape_1"
    }
  }
}
name: "gradients/zeros_like_88"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_89"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_90"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_91"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_9/project/Conv2D"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_9/depthwise_output"
input: "MobilenetV2/expanded_conv_9/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_9/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_9/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_22"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_9/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_9/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_92"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_93"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_94"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_95"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_9/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_9/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_9/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_96"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_97"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_98"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_99"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_9/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_9/expand/Conv2D"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_9/input"
input: "MobilenetV2/expanded_conv_9/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_9/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_9/input"
input: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_23"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_9/add_grad/tuple/control_dependency_1"
input: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/add_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN_24"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_9/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/add_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_8/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/add_grad/Shape_1"
op: "Shape"
input: "MobilenetV2/expanded_conv_8/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/Shape"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/add_grad/Sum"
op: "Sum"
input: "gradients/AddN_23"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/add_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/Sum"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/add_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_23"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/add_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/Sum_1"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_8/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_8/add_grad/Reshape_1"
name: "gradients/MobilenetV2/expanded_conv_8/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_8/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/add_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/Reshape_1"
input: "^gradients/MobilenetV2/expanded_conv_8/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/add_grad/Reshape_1"
    }
  }
}
name: "gradients/zeros_like_100"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_101"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_102"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_103"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_8/project/Conv2D"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_8/depthwise_output"
input: "MobilenetV2/expanded_conv_8/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_8/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_8/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_25"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_8/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_8/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_104"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_105"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_106"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_107"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_8/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_8/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_8/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_108"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_109"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_110"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_111"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_8/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_8/expand/Conv2D"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_8/input"
input: "MobilenetV2/expanded_conv_8/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_8/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_8/input"
input: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_26"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_8/add_grad/tuple/control_dependency_1"
input: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/add_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN_27"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_8/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/add_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_7/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/add_grad/Shape_1"
op: "Shape"
input: "MobilenetV2/expanded_conv_7/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/Shape"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/add_grad/Sum"
op: "Sum"
input: "gradients/AddN_26"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/add_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/Sum"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/add_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_26"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/add_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/Sum_1"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_7/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_7/add_grad/Reshape_1"
name: "gradients/MobilenetV2/expanded_conv_7/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_7/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/add_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/Reshape_1"
input: "^gradients/MobilenetV2/expanded_conv_7/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/add_grad/Reshape_1"
    }
  }
}
name: "gradients/zeros_like_112"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_113"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_114"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_115"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_7/project/Conv2D"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_7/depthwise_output"
input: "MobilenetV2/expanded_conv_7/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_7/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_7/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_28"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_7/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_7/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_116"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_117"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_118"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_119"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_7/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_7/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_7/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_120"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_121"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_122"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_123"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_7/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_7/expand/Conv2D"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_7/input"
input: "MobilenetV2/expanded_conv_7/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_7/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_7/input"
input: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_29"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_7/add_grad/tuple/control_dependency_1"
input: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/add_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN_30"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_7/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/zeros_like_124"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_125"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_126"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_127"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/AddN_29"
input: "MobilenetV2/expanded_conv_6/project/Conv2D"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_6/depthwise_output"
input: "MobilenetV2/expanded_conv_6/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_6/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_6/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_31"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_6/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_6/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_128"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_129"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_130"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_131"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_6/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_6/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_6/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_132"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_133"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_134"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_135"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_6/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_6/expand/Conv2D"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_6/input"
input: "MobilenetV2/expanded_conv_6/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_6/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_6/input"
input: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_32"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/add_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_5/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/add_grad/Shape_1"
op: "Shape"
input: "MobilenetV2/expanded_conv_5/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/Shape"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/add_grad/Sum"
op: "Sum"
input: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/add_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/Sum"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/add_grad/Sum_1"
op: "Sum"
input: "gradients/MobilenetV2/expanded_conv_6/expand/Conv2D_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/add_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/Sum_1"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_5/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_5/add_grad/Reshape_1"
name: "gradients/MobilenetV2/expanded_conv_5/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_5/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/add_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/Reshape_1"
input: "^gradients/MobilenetV2/expanded_conv_5/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/add_grad/Reshape_1"
    }
  }
}
name: "gradients/zeros_like_136"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_137"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_138"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_139"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_5/project/Conv2D"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_5/depthwise_output"
input: "MobilenetV2/expanded_conv_5/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_5/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_5/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_33"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_5/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_5/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_140"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_141"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_142"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_143"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_5/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_5/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_5/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_144"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_145"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_146"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_147"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_5/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_5/expand/Conv2D"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_5/input"
input: "MobilenetV2/expanded_conv_5/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_5/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_5/input"
input: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_34"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_5/add_grad/tuple/control_dependency_1"
input: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/add_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN_35"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_5/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/add_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_4/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/add_grad/Shape_1"
op: "Shape"
input: "MobilenetV2/expanded_conv_4/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/Shape"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/add_grad/Sum"
op: "Sum"
input: "gradients/AddN_34"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/add_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/Sum"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/add_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_34"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/add_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/Sum_1"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_4/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_4/add_grad/Reshape_1"
name: "gradients/MobilenetV2/expanded_conv_4/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_4/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/add_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/Reshape_1"
input: "^gradients/MobilenetV2/expanded_conv_4/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/add_grad/Reshape_1"
    }
  }
}
name: "gradients/zeros_like_148"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_149"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_150"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_151"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_4/project/Conv2D"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_4/depthwise_output"
input: "MobilenetV2/expanded_conv_4/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_4/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_4/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_36"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_4/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_4/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_152"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_153"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_154"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_155"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_4/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_4/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_4/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_156"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_157"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_158"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_159"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_4/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_4/expand/Conv2D"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_4/input"
input: "MobilenetV2/expanded_conv_4/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_4/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_4/input"
input: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_37"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_4/add_grad/tuple/control_dependency_1"
input: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/add_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN_38"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_4/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/zeros_like_160"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_161"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_162"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_163"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/AddN_37"
input: "MobilenetV2/expanded_conv_3/project/Conv2D"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_3/depthwise_output"
input: "MobilenetV2/expanded_conv_3/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_3/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_3/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_39"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_3/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_3/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_164"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_165"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_166"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_167"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_3/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_3/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_3/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_168"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_169"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_170"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_171"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_3/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_3/expand/Conv2D"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_3/input"
input: "MobilenetV2/expanded_conv_3/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_3/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_3/input"
input: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_40"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/add_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_2/project/Identity"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/add_grad/Shape_1"
op: "Shape"
input: "MobilenetV2/expanded_conv_2/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/Shape"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/add_grad/Sum"
op: "Sum"
input: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/add_grad/Reshape"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/Sum"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/add_grad/Sum_1"
op: "Sum"
input: "gradients/MobilenetV2/expanded_conv_3/expand/Conv2D_grad/tuple/control_dependency"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/add_grad/Reshape_1"
op: "Reshape"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/Sum_1"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_2/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_2/add_grad/Reshape_1"
name: "gradients/MobilenetV2/expanded_conv_2/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/Reshape"
input: "^gradients/MobilenetV2/expanded_conv_2/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/add_grad/Reshape"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/Reshape_1"
input: "^gradients/MobilenetV2/expanded_conv_2/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/add_grad/Reshape_1"
    }
  }
}
name: "gradients/zeros_like_172"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_173"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_174"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_175"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_2/project/Conv2D"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_2/depthwise_output"
input: "MobilenetV2/expanded_conv_2/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_2/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_2/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_41"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_2/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_2/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_176"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_177"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_178"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_179"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_2/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_2/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_2/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_180"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_181"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_182"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_183"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_2/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_2/expand/Conv2D"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_2/input"
input: "MobilenetV2/expanded_conv_2/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_2/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_2/input"
input: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_42"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_2/add_grad/tuple/control_dependency_1"
input: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/add_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN_43"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_2/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/zeros_like_184"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_185"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_186"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_187"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/AddN_42"
input: "MobilenetV2/expanded_conv_1/project/Conv2D"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_1/depthwise_output"
input: "MobilenetV2/expanded_conv_1/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_1/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_1/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_44"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_1/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_1/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_188"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_189"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_190"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_191"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv_1/expansion_output"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv_1/expansion_output"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv_1/expand/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_192"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_193"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_194"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_195"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_1/expand/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv_1/expand/Conv2D"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv_1/input"
input: "MobilenetV2/expanded_conv_1/expand/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv_1/expand/weights/read"
input: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv_1/input"
input: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_45"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/zeros_like_196"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_197"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_198"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_199"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv_1/expand/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv/project/Conv2D"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/expanded_conv/depthwise_output"
input: "MobilenetV2/expanded_conv/project/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/ShapeN"
input: "MobilenetV2/expanded_conv/project/weights/read"
input: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/expanded_conv/depthwise_output"
input: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/Const"
input: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_46"
op: "AddN"
input: "gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv/project/Conv2D_grad/tuple/control_dependency"
input: "MobilenetV2/expanded_conv/depthwise/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_200"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_201"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_202"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_203"
op: "ZerosLike"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/expanded_conv/depthwise/Relu6_grad/Relu6Grad"
input: "MobilenetV2/expanded_conv/depthwise/depthwise"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/read"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/Shape"
op: "Shape"
input: "MobilenetV2/expanded_conv/input"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
op: "DepthwiseConv2dNativeBackpropInput"
input: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/Shape"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/read"
input: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
op: "DepthwiseConv2dNativeBackpropFilter"
input: "MobilenetV2/expanded_conv/input"
input: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/Shape_1"
input: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
name: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
input: "^gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
input: "^gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
    }
  }
}
name: "gradients/MobilenetV2/Conv/Relu6_grad/Relu6Grad"
op: "Relu6Grad"
input: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/tuple/control_dependency"
input: "MobilenetV2/Conv/Relu6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_204"
op: "ZerosLike"
input: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_205"
op: "ZerosLike"
input: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_206"
op: "ZerosLike"
input: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/zeros_like_207"
op: "ZerosLike"
input: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
op: "FusedBatchNormGrad"
input: "gradients/MobilenetV2/Conv/Relu6_grad/Relu6Grad"
input: "MobilenetV2/Conv/Conv2D"
input: "MobilenetV2/Conv/BatchNorm/gamma/read"
input: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm:3"
input: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
name: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
input: "^gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
input: "^gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
input: "^gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
input: "^gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
input: "^gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
    }
  }
}
name: "gradients/MobilenetV2/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "MobilenetV2/input"
input: "MobilenetV2/Conv/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/MobilenetV2/Conv/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
    }
  }
}
name: "gradients/MobilenetV2/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/MobilenetV2/Conv/Conv2D_grad/ShapeN"
input: "MobilenetV2/Conv/weights/read"
input: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "MobilenetV2/input"
input: "gradients/MobilenetV2/Conv/Conv2D_grad/Const"
input: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
name: "gradients/MobilenetV2/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MobilenetV2/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/Conv/Conv2D_grad/Conv2DBackpropFilter"
name: "gradients/MobilenetV2/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MobilenetV2/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/MobilenetV2/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
name: "gradients/MobilenetV2/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MobilenetV2/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/MobilenetV2/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
name: "gradients/AddN_47"
op: "AddN"
input: "gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
input: "gradients/MobilenetV2/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
    }
  }
}
name: "beta1_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.8999999761581421
    }
  }
}
name: "beta1_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "beta1_power/Assign"
op: "Assign"
input: "beta1_power"
input: "beta1_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "beta1_power/read"
op: "Identity"
input: "beta1_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
name: "beta2_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}
name: "beta2_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "beta2_power/Assign"
op: "Assign"
input: "beta2_power"
input: "beta2_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "beta2_power/read"
op: "Identity"
input: "beta2_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
name: "MobilenetV2/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/Conv/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/Conv/weights/Adam"
input: "MobilenetV2/Conv/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/Conv/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
name: "MobilenetV2/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/Conv/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/Conv/weights/Adam_1"
input: "MobilenetV2/Conv/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/Conv/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam_1"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 32
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 16
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/weights/Adam"
input: "MobilenetV2/expanded_conv/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 16
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 16
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 16
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 16
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 16
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 16
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 16
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 96
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 96
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 24
      }
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 24
      }
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 144
      }
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 144
      }
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 24
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 24
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 24
      }
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 24
      }
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 144
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 144
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 144
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 192
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 64
      }
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 384
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 384
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 384
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 384
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 576
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 576
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 576
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 576
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 576
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 576
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 576
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 576
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 96
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 576
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 576
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 576
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 576
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 576
      }
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 576
      }
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 160
      }
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 160
      }
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 960
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 960
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 960
      }
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 960
      }
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 160
      }
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 160
      }
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 960
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 960
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 960
      }
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 960
      }
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 160
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 160
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 160
      }
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 160
      }
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 960
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 960
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 960
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 960
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 960
      }
      dim {
        size: 320
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 960
      }
      dim {
        size: 320
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam_1"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 320
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 320
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 320
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 320
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 320
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 320
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 320
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 320
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
    }
  }
}
name: "MobilenetV2/Conv_1/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv_1/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv_1/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv_1/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 320
      }
      dim {
        size: 1280
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv_1/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/Conv_1/weights/Adam"
input: "MobilenetV2/Conv_1/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/Conv_1/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
name: "MobilenetV2/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
    }
  }
}
name: "MobilenetV2/Conv_1/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv_1/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv_1/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv_1/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 320
      }
      dim {
        size: 1280
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv_1/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/Conv_1/weights/Adam_1"
input: "MobilenetV2/Conv_1/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/Conv_1/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1280
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1280
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam/Assign"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam/read"
op: "Identity"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1280
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1280
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1/read"
op: "Identity"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1280
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1280
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam/Assign"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam/read"
op: "Identity"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1280
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1280
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1/read"
op: "Identity"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\000\005\000\000\351\003\000\000"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 1280
      }
      dim {
        size: 1001
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam/Assign"
op: "Assign"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam/read"
op: "Identity"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\000\005\000\000\351\003\000\000"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 1280
      }
      dim {
        size: 1001
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1/read"
op: "Identity"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1001
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1001
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam/Assign"
op: "Assign"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam/read"
op: "Identity"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1001
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1/Initializer/zeros"
op: "Fill"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1/Initializer/zeros/shape_as_tensor"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1001
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1/Assign"
op: "Assign"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1/read"
op: "Identity"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
name: "Encoding_layer/weights/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\351\003\000\000\200\000\000\000"
    }
  }
}
name: "Encoding_layer/weights/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Encoding_layer/weights/Adam/Initializer/zeros"
op: "Fill"
input: "Encoding_layer/weights/Adam/Initializer/zeros/shape_as_tensor"
input: "Encoding_layer/weights/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "Encoding_layer/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1001
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "Encoding_layer/weights/Adam/Assign"
op: "Assign"
input: "Encoding_layer/weights/Adam"
input: "Encoding_layer/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "Encoding_layer/weights/Adam/read"
op: "Identity"
input: "Encoding_layer/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
name: "Encoding_layer/weights/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\351\003\000\000\200\000\000\000"
    }
  }
}
name: "Encoding_layer/weights/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Encoding_layer/weights/Adam_1/Initializer/zeros"
op: "Fill"
input: "Encoding_layer/weights/Adam_1/Initializer/zeros/shape_as_tensor"
input: "Encoding_layer/weights/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "Encoding_layer/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1001
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "Encoding_layer/weights/Adam_1/Assign"
op: "Assign"
input: "Encoding_layer/weights/Adam_1"
input: "Encoding_layer/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "Encoding_layer/weights/Adam_1/read"
op: "Identity"
input: "Encoding_layer/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
name: "Encoding_layer/biases/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "Encoding_layer/biases/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Encoding_layer/biases/Adam/Initializer/zeros"
op: "Fill"
input: "Encoding_layer/biases/Adam/Initializer/zeros/shape_as_tensor"
input: "Encoding_layer/biases/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "Encoding_layer/biases/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "Encoding_layer/biases/Adam/Assign"
op: "Assign"
input: "Encoding_layer/biases/Adam"
input: "Encoding_layer/biases/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "Encoding_layer/biases/Adam/read"
op: "Identity"
input: "Encoding_layer/biases/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
name: "Encoding_layer/biases/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 128
    }
  }
}
name: "Encoding_layer/biases/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "Encoding_layer/biases/Adam_1/Initializer/zeros"
op: "Fill"
input: "Encoding_layer/biases/Adam_1/Initializer/zeros/shape_as_tensor"
input: "Encoding_layer/biases/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "Encoding_layer/biases/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "Encoding_layer/biases/Adam_1/Assign"
op: "Assign"
input: "Encoding_layer/biases/Adam_1"
input: "Encoding_layer/biases/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "Encoding_layer/biases/Adam_1/read"
op: "Identity"
input: "Encoding_layer/biases/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
name: "Adam/beta1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.8999999761581421
    }
  }
}
name: "Adam/beta2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}
name: "Adam/epsilon"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.99999993922529e-09
    }
  }
}
name: "Adam/update_MobilenetV2/Conv/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/Conv/weights"
input: "MobilenetV2/Conv/weights/Adam"
input: "MobilenetV2/Conv/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_47"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/Conv/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/Conv/BatchNorm/gamma"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam"
input: "MobilenetV2/Conv/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/Conv/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/Conv/BatchNorm/beta"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam"
input: "MobilenetV2/Conv/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv/project/weights"
input: "MobilenetV2/expanded_conv/project/weights/Adam"
input: "MobilenetV2/expanded_conv/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_1/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_1/expand/weights"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_1/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_1/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_1/project/weights"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam"
input: "MobilenetV2/expanded_conv_1/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_1/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_2/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_2/expand/weights"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_2/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_43"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_2/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_2/project/weights"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam"
input: "MobilenetV2/expanded_conv_2/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_2/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_3/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_3/expand/weights"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_3/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_3/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_3/project/weights"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam"
input: "MobilenetV2/expanded_conv_3/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_3/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_4/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_4/expand/weights"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_4/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_4/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_4/project/weights"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam"
input: "MobilenetV2/expanded_conv_4/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_4/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_5/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_5/expand/weights"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_5/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_5/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_5/project/weights"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam"
input: "MobilenetV2/expanded_conv_5/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_5/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_6/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_6/expand/weights"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_6/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_32"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_6/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_6/project/weights"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam"
input: "MobilenetV2/expanded_conv_6/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_31"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_6/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_7/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_7/expand/weights"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_7/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_7/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_7/project/weights"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam"
input: "MobilenetV2/expanded_conv_7/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_7/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_8/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_8/expand/weights"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_8/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_8/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_8/project/weights"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam"
input: "MobilenetV2/expanded_conv_8/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_8/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_9/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_9/expand/weights"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_9/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_9/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_9/project/weights"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam"
input: "MobilenetV2/expanded_conv_9/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_9/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_10/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_10/expand/weights"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_10/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_10/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_10/project/weights"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam"
input: "MobilenetV2/expanded_conv_10/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_10/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_11/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_11/expand/weights"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_11/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_11/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_11/project/weights"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam"
input: "MobilenetV2/expanded_conv_11/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_11/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_12/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_12/expand/weights"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_12/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_12/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_12/project/weights"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam"
input: "MobilenetV2/expanded_conv_12/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_12/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_13/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_13/expand/weights"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_13/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_13/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_13/project/weights"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam"
input: "MobilenetV2/expanded_conv_13/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_13/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_14/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_14/expand/weights"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_14/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_14/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_14/project/weights"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam"
input: "MobilenetV2/expanded_conv_14/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_14/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_15/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_15/expand/weights"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_15/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_15/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_15/project/weights"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam"
input: "MobilenetV2/expanded_conv_15/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_15/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_16/expand/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_16/expand/weights"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam"
input: "MobilenetV2/expanded_conv_16/expand/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam"
input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/depthwise_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_16/project/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_16/project/weights"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam"
input: "MobilenetV2/expanded_conv_16/project/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/expanded_conv_16/project/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam"
input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/Conv_1/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/Conv_1/weights"
input: "MobilenetV2/Conv_1/weights/Adam"
input: "MobilenetV2/Conv_1/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/Conv_1/BatchNorm/gamma/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/Conv_1/BatchNorm/gamma"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam"
input: "MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/gamma"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/Conv_1/BatchNorm/beta/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/Conv_1/BatchNorm/beta"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam"
input: "MobilenetV2/Conv_1/BatchNorm/beta/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Conv_1/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/Logits/Conv2d_1c_1x1/weights/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_MobilenetV2/Logits/Conv2d_1c_1x1/biases/ApplyAdam"
op: "ApplyAdam"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam"
input: "MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/MobilenetV2/Logits/Conv2d_1c_1x1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@MobilenetV2/Logits/Conv2d_1c_1x1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_Encoding_layer/weights/ApplyAdam"
op: "ApplyAdam"
input: "Encoding_layer/weights"
input: "Encoding_layer/weights/Adam"
input: "Encoding_layer/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/Encoding_layer/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/update_Encoding_layer/biases/ApplyAdam"
op: "ApplyAdam"
input: "Encoding_layer/biases"
input: "Encoding_layer/biases/Adam"
input: "Encoding_layer/biases/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "ExponentialDecay"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/Encoding_layer/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
name: "Adam/mul"
op: "Mul"
input: "beta1_power/read"
input: "Adam/beta1"
input: "^Adam/update_MobilenetV2/Conv/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv_1/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv_1/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv_1/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/Logits/Conv2d_1c_1x1/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/Logits/Conv2d_1c_1x1/biases/ApplyAdam"
input: "^Adam/update_Encoding_layer/weights/ApplyAdam"
input: "^Adam/update_Encoding_layer/biases/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
name: "Adam/Assign"
op: "Assign"
input: "beta1_power"
input: "Adam/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "Adam/mul_1"
op: "Mul"
input: "beta2_power/read"
input: "Adam/beta2"
input: "^Adam/update_MobilenetV2/Conv/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv_1/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv_1/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv_1/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/Logits/Conv2d_1c_1x1/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/Logits/Conv2d_1c_1x1/biases/ApplyAdam"
input: "^Adam/update_Encoding_layer/weights/ApplyAdam"
input: "^Adam/update_Encoding_layer/biases/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
name: "Adam/Assign_1"
op: "Assign"
input: "beta2_power"
input: "Adam/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Encoding_layer/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "Adam/update"
op: "NoOp"
input: "^Adam/update_MobilenetV2/Conv/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_1/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_2/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_3/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_4/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_5/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_6/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_7/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_8/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_9/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_10/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_11/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_12/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_13/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_14/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_15/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/expand/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/project/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/expanded_conv_16/project/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv_1/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv_1/BatchNorm/gamma/ApplyAdam"
input: "^Adam/update_MobilenetV2/Conv_1/BatchNorm/beta/ApplyAdam"
input: "^Adam/update_MobilenetV2/Logits/Conv2d_1c_1x1/weights/ApplyAdam"
input: "^Adam/update_MobilenetV2/Logits/Conv2d_1c_1x1/biases/ApplyAdam"
input: "^Adam/update_Encoding_layer/weights/ApplyAdam"
input: "^Adam/update_Encoding_layer/biases/ApplyAdam"
input: "^Adam/Assign"
input: "^Adam/Assign_1"
name: "Adam/value"
op: "Const"
input: "^Adam/update"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@global_step"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
name: "Adam"
op: "AssignAdd"
input: "global_step"
input: "Adam/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@global_step"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "init"
op: "NoOp"
input: "^global_step/Assign"
input: "^MobilenetV2/Conv/weights/Assign"
input: "^MobilenetV2/Conv/BatchNorm/gamma/Assign"
input: "^MobilenetV2/Conv/BatchNorm/beta/Assign"
input: "^MobilenetV2/Conv/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/Conv/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv/project/weights/Assign"
input: "^MobilenetV2/expanded_conv/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_1/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_1/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_2/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_2/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_3/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_3/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_4/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_4/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_5/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_5/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_6/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_6/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_7/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_7/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_8/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_8/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_9/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_9/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_10/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_10/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_11/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_11/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_12/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_12/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_13/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_13/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_14/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_14/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_15/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_15/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_16/expand/weights/Assign"
input: "^MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Assign"
input: "^MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/expanded_conv_16/project/weights/Assign"
input: "^MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Assign"
input: "^MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Assign"
input: "^MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/Conv_1/weights/Assign"
input: "^MobilenetV2/Conv_1/BatchNorm/gamma/Assign"
input: "^MobilenetV2/Conv_1/BatchNorm/beta/Assign"
input: "^MobilenetV2/Conv_1/BatchNorm/moving_mean/Assign"
input: "^MobilenetV2/Conv_1/BatchNorm/moving_variance/Assign"
input: "^MobilenetV2/Logits/Conv2d_1c_1x1/weights/Assign"
input: "^MobilenetV2/Logits/Conv2d_1c_1x1/biases/Assign"
input: "^Encoding_layer/weights/Assign"
input: "^Encoding_layer/biases/Assign"
input: "^beta1_power/Assign"
input: "^beta2_power/Assign"
input: "^MobilenetV2/Conv/weights/Adam/Assign"
input: "^MobilenetV2/Conv/weights/Adam_1/Assign"
input: "^MobilenetV2/Conv/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/Conv/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/Conv/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/Conv/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_1/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_1/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_1/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_1/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_2/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_2/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_2/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_2/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_3/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_3/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_3/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_3/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_4/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_4/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_4/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_4/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_5/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_5/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_5/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_5/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_6/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_6/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_6/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_6/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_7/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_7/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_7/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_7/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_8/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_8/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_8/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_8/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_9/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_9/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_9/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_9/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_10/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_10/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_10/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_10/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_11/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_11/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_11/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_11/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_12/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_12/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_12/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_12/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_13/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_13/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_13/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_13/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_14/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_14/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_14/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_14/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_15/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_15/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_15/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_15/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_16/expand/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_16/expand/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_16/project/weights/Adam/Assign"
input: "^MobilenetV2/expanded_conv_16/project/weights/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/Conv_1/weights/Adam/Assign"
input: "^MobilenetV2/Conv_1/weights/Adam_1/Assign"
input: "^MobilenetV2/Conv_1/BatchNorm/gamma/Adam/Assign"
input: "^MobilenetV2/Conv_1/BatchNorm/gamma/Adam_1/Assign"
input: "^MobilenetV2/Conv_1/BatchNorm/beta/Adam/Assign"
input: "^MobilenetV2/Conv_1/BatchNorm/beta/Adam_1/Assign"
input: "^MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam/Assign"
input: "^MobilenetV2/Logits/Conv2d_1c_1x1/weights/Adam_1/Assign"
input: "^MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam/Assign"
input: "^MobilenetV2/Logits/Conv2d_1c_1x1/biases/Adam_1/Assign"
input: "^Encoding_layer/weights/Adam/Assign"
input: "^Encoding_layer/weights/Adam_1/Assign"
input: "^Encoding_layer/biases/Adam/Assign"
input: "^Encoding_layer/biases/Adam_1/Assign"
name: "init_1"
op: "NoOp"
name: "group_deps"
op: "NoOp"
input: "^init"
input: "^init_1"
